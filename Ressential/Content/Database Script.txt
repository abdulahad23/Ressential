-- Table: Users
CREATE TABLE Users (
    UserId INT PRIMARY KEY IDENTITY(1,1),
    UserName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    Password NVARCHAR(255) NOT NULL,
    IsActive BIT NOT NULL DEFAULT 1,
    CreatedBy INT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

-- Table: Roles
CREATE TABLE Roles (
    RoleId INT PRIMARY KEY IDENTITY(1,1),
    RoleName NVARCHAR(100) NOT NULL UNIQUE,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

-- Table: Permissions
CREATE TABLE Permissions (
    PermissionId INT PRIMARY KEY IDENTITY(1,1),
    PermissionName NVARCHAR(100) NOT NULL UNIQUE,
    Description NVARCHAR(255) NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE()
);

-- Table: RolePermissions
CREATE TABLE RolePermissions (
    RoleId INT NOT NULL,
    PermissionId INT NOT NULL,
    PRIMARY KEY (RoleId, PermissionId),
    FOREIGN KEY (RoleId) REFERENCES Roles(RoleId) ON DELETE CASCADE,
    FOREIGN KEY (PermissionId) REFERENCES Permissions(PermissionId) ON DELETE CASCADE
);

-- Table: UserRoles
CREATE TABLE UserRoles (
    UserId INT NOT NULL,
    RoleId INT NOT NULL,
    PRIMARY KEY (UserId, RoleId),
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (RoleId) REFERENCES Roles(RoleId) ON DELETE CASCADE
);

-- Table: UnitOfMeasure
CREATE TABLE UnitOfMeasure (
    UnitOfMeasureId INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(50) NOT NULL,
    Symbol NVARCHAR(10) NOT NULL
);

-- Table: ItemCategory
CREATE TABLE ItemCategory (
    ItemCategoryId INT PRIMARY KEY IDENTITY(1,1),
    ItemCategoryName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(500) NULL
);

-- Table: Items
CREATE TABLE Items (
    ItemId INT PRIMARY KEY IDENTITY(1,1),
    ItemName NVARCHAR(100) NOT NULL,
    Sku NVARCHAR(50) NOT NULL UNIQUE,
    ItemCategoryId INT NOT NULL,
    UnitOfMeasureId INT NOT NULL,
    MinimumStockLevel DECIMAL(18,2) NOT NULL DEFAULT 0,
    IsActive BIT NOT NULL DEFAULT 1,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ItemCategoryId) REFERENCES ItemCategory(ItemCategoryId),
    FOREIGN KEY (UnitOfMeasureId) REFERENCES UnitOfMeasure(UnitOfMeasureId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: WarehouseItemStock
CREATE TABLE WarehouseItemStock (
    ItemId INT PRIMARY KEY,
    Quantity DECIMAL(18,2) NOT NULL,
    CostPerUnit DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: WarehouseItemTransaction
CREATE TABLE WarehouseItemTransaction (
    TransactionId INT PRIMARY KEY IDENTITY(1,1),
    TransactionDate DATETIME2 NOT NULL,
    ItemId INT NOT NULL,
    TransactionType NVARCHAR(20) NOT NULL CHECK (TransactionType IN ('Purchase', 'PurchaseReturn', 'Issue','StockReturn', 'Opening')),
    TransactionTypeId INT NOT NULL,
    Quantity DECIMAL(18,2) NOT NULL,
    CostPerUnit DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: Vendors
CREATE TABLE Vendors (
    VendorId INT PRIMARY KEY IDENTITY(1,1),
    Name NVARCHAR(100) NOT NULL,
    CompanyName NVARCHAR(100) NULL,
    Email NVARCHAR(100) NULL,
    Contact NVARCHAR(50) NULL,
    Address NVARCHAR(255) NULL,
    City NVARCHAR(100) NULL,
    Country NVARCHAR(100) NULL,
    PostalCode NVARCHAR(20) NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

-- Table: Branches
CREATE TABLE Branches (
    BranchId INT PRIMARY KEY IDENTITY(1,1),
    BranchName NVARCHAR(100) NOT NULL,
    BranchCode NVARCHAR(50) NOT NULL UNIQUE,
    BranchContact NVARCHAR(50) NOT NULL,
    Address NVARCHAR(255) NOT NULL,
    City NVARCHAR(100) NOT NULL,
    Country NVARCHAR(100) NOT NULL,
    PostalCode NVARCHAR(20) NULL,
    OwnerName NVARCHAR(100) NOT NULL,
    IsActive BIT NOT NULL DEFAULT 1,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)

);

-- Table: BranchItems
CREATE TABLE BranchItems(
    BranchItemId INT PRIMARY KEY IDENTITY(1,1),
    ItemId INT NOT NULL,
    BranchId INT NOT NULL,
    MinimumStockLevel DECIMAL(18,2) NOT NULL DEFAULT 0,
    IsActive BIT NOT NULL DEFAULT 1,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId),
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: Purchases
CREATE TABLE Purchases (
    PurchaseId INT PRIMARY KEY IDENTITY(1,1),
    PurchaseDate DATETIME2 NOT NULL,
    PurchaseNo NVARCHAR(50) NOT NULL UNIQUE,
    ReferenceNo NVARCHAR(50) NULL,
    VendorId INT NOT NULL,
    Memo NVARCHAR(255) NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Paid', 'Not Paid', 'Partially Paid')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (VendorId) REFERENCES Vendors(VendorId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: PurchaseDetails
CREATE TABLE PurchaseDetails (
    PurchaseDetailId INT PRIMARY KEY IDENTITY(1,1),
    PurchaseId INT NOT NULL,
    ItemId INT NOT NULL,
    Quantity DECIMAL(18,2) NOT NULL,
    UnitPrice DECIMAL(18,2) NOT NULL,
    Description NVARCHAR(255) NULL,
    FOREIGN KEY (PurchaseId) REFERENCES Purchases(PurchaseId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: Requisitions
CREATE TABLE Requisitions (
    RequisitionId INT PRIMARY KEY IDENTITY(1,1),
    RequisitionNo NVARCHAR(50) NOT NULL UNIQUE,
    RequisitionDate DATETIME2 NOT NULL,
    BranchId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Settled', 'Partially Settled', 'Rejected')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: RequisitionDetails
CREATE TABLE RequisitionDetails (
    RequisitionDetailId INT PRIMARY KEY IDENTITY(1,1),
    RequisitionId INT NOT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    Quantity DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (RequisitionId) REFERENCES Requisitions(RequisitionId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: WarehouseIssues
CREATE TABLE WarehouseIssues (
    IssueId INT PRIMARY KEY IDENTITY(1,1),
    IssueDate DATETIME2 NOT NULL,
    IssueNo NVARCHAR(50) NOT NULL UNIQUE,
    ReferenceNo NVARCHAR(50) NULL,
    BranchID INT NOT NULL,
    Memo NVARCHAR(255) NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Issued')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchID) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: WarehouseIssueDetails
CREATE TABLE WarehouseIssueDetails (
    IssueDetailId INT PRIMARY KEY IDENTITY(1,1),
    IssueId INT NOT NULL,
    RequisitionId INT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    Quantity DECIMAL(18,2) NOT NULL,
    CostApplied DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (IssueId) REFERENCES WarehouseIssues(IssueId) ON DELETE CASCADE,
    FOREIGN KEY (RequisitionId) REFERENCES Requisitions(RequisitionId) ON DELETE SET NULL,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: PurchaseReturn
CREATE TABLE PurchaseReturn (
    PurchaseReturnId INT PRIMARY KEY IDENTITY(1,1),
    PurchaseReturnDate DATETIME2 NOT NULL,
    PurchaseReturnNo NVARCHAR(50) NOT NULL UNIQUE,
    ReferenceNo NVARCHAR(50) NULL,
    VendorID INT NOT NULL,
    Memo NVARCHAR(255) NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Received', 'Not Received', 'Partially Received')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: PurchaseReturnDetails
CREATE TABLE PurchaseReturnDetails (
    PurchaseReturnDetailId INT PRIMARY KEY IDENTITY(1,1),
    PurchaseReturnId INT NOT NULL,
    ItemId INT NOT NULL,
    Quantity DECIMAL(18,2) NOT NULL,
    UnitPrice DECIMAL(18,2) NOT NULL,
    Description NVARCHAR(255) NULL,
    FOREIGN KEY (PurchaseReturnId) REFERENCES PurchaseReturn(PurchaseReturnId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);



-- Table: ReturnStock
CREATE TABLE ReturnStock (
    ReturnStockId INT PRIMARY KEY IDENTITY(1,1),
    ReturnDate DATETIME2 NOT NULL,
    ReturnNo NVARCHAR(50) NOT NULL UNIQUE,
    ReferenceNo NVARCHAR(50) NULL,
    BranchId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Approved', 'Rejected')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: ReturnStockDetails
CREATE TABLE ReturnStockDetails (
    ReturnStockDetailId INT PRIMARY KEY IDENTITY(1,1),
    ReturnStockId INT NOT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    ItemQuantity DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (ReturnStockId) REFERENCES ReturnStock(ReturnStockId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: ConsumeItems
CREATE TABLE ConsumeItems (
    ConsumeItemId INT PRIMARY KEY IDENTITY(1,1),
    ConsumeItemDate DATETIME2 NOT NULL,
    ReferenceNo NVARCHAR(50) NOT NULL UNIQUE,
    BranchId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: ConsumeItemDetails
CREATE TABLE ConsumeItemDetails (
    ConsumeItemDetailId INT PRIMARY KEY IDENTITY(1,1),
    ConsumeItemId INT NOT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    ItemQuantity DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (ConsumeItemId) REFERENCES ConsumeItems(ConsumeItemId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: WastageItems
CREATE TABLE WastageItems (
    WastageItemId INT PRIMARY KEY IDENTITY(1,1),
    WastageItemDate DATETIME2 NOT NULL,
    ReferenceNo NVARCHAR(50) NOT NULL UNIQUE,
    BranchId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: WastageItemDetails
CREATE TABLE WastageItemDetails (
    WastageItemDetailId INT PRIMARY KEY IDENTITY(1,1),
    WastageItemId INT NOT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    ItemQuantity DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (WastageItemId) REFERENCES WastageItems(WastageItemId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: ProductCategories
CREATE TABLE ProductCategories (
    ProductCategoryId INT PRIMARY KEY IDENTITY(1,1),
    ProductCategoryName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(255) NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: Products
CREATE TABLE Products (
    ProductId INT PRIMARY KEY IDENTITY(1,1),
    ProductCode NVARCHAR(50) NOT NULL UNIQUE,
    ProductName NVARCHAR(100) NOT NULL,
    BranchId INT NOT NULL,
    ProductImage NVARCHAR(max) NULL,
    ProductPrice DECIMAL(18,2) NOT NULL,
    Description NVARCHAR(255) NULL,
    ProductCategoryId INT NOT NULL,
    ChefID INT NULL,
    IsActive BIT NOT NULL DEFAULT 1,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (ProductCategoryId) REFERENCES ProductCategories(ProductCategoryId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: ProductItemDetails
CREATE TABLE ProductItemDetails (
    ProductItemDetailId INT PRIMARY KEY IDENTITY(1,1),    
    ProductId INT NOT NULL,
    ItemId INT NOT NULL,
    Description NVARCHAR(255) NULL,
    ItemQuantity DECIMAL(18,2) NOT NULL,
    Description NVARCHAR(255) NULL,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId) ON DELETE CASCADE,
    FOREIGN KEY (ItemId) REFERENCES Items(ItemId)
);

-- Table: Customers
CREATE TABLE Customers (
    CustomerId INT PRIMARY KEY IDENTITY(1,1),
    CustomerName NVARCHAR(100) NOT NULL,
    ContactNo NVARCHAR(20) NOT NULL,
    Address NVARCHAR(255) NULL,
    City NVARCHAR(100) NULL,
    Country NVARCHAR(100) NULL
);

-- Table: Orders
CREATE TABLE Orders (
    OrderId INT PRIMARY KEY IDENTITY(1,1),
    OrderDate DATETIME2 NOT NULL,
    OrderNo NVARCHAR(50) NOT NULL UNIQUE,
    OrderType NVARCHAR(20) NOT NULL CHECK (OrderType IN ('Dine-in', 'Take-away', 'Online')),
    TableNo NVARCHAR(10) NULL,
    BranchId INT NOT NULL,
    CustomerId INT NULL,
    PaymentMethod NVARCHAR(20) NOT NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Completed', 'Cancelled')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId),
    FOREIGN KEY (CustomerId) REFERENCES Customers(CustomerId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

-- Table: OrderDetails
CREATE TABLE OrderDetails (
    OrderDetailId INT PRIMARY KEY IDENTITY(1,1),
    OrderId INT NOT NULL,
    ProductId INT NOT NULL,
    ProductQuantity DECIMAL(18,2) NOT NULL,
    ProductPrice DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- Table: OrderReturns
CREATE TABLE OrderReturns (
    OrderReturnId INT PRIMARY KEY IDENTITY(1,1),
    OrderReturnDate DATETIME2 NOT NULL,
    OrderId INT NOT NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId) ON DELETE CASCADE,
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId)
);

-- Table: OrderReturnDetails
CREATE TABLE OrderReturnDetails (
    OrderReturnDetailId INT PRIMARY KEY IDENTITY(1,1),
    OrderReturnId INT NOT NULL,
    ProductId INT NOT NULL,
    ProductQuantity DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (OrderReturnId) REFERENCES OrderReturns(OrderReturnId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- Table: Accounts
CREATE TABLE Accounts (
    AccountId INT PRIMARY KEY IDENTITY(1,1),
    AccountType NVARCHAR(20) NOT NULL CHECK (AccountType IN ('Bank', 'Cash')),
    AccountTitle NVARCHAR(100) NOT NULL,
    BankName NVARCHAR(100) NULL,
    AccountNumber NVARCHAR(50) NULL,
    Description NVARCHAR(255) NULL,
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: PaymentVouchers
CREATE TABLE PaymentVouchers (
    PaymentVoucherId INT PRIMARY KEY IDENTITY(1,1),
    PaymentVoucherNo NVARCHAR(50) NOT NULL UNIQUE,
    PaymentVoucherDate DATETIME2 NOT NULL,
    VendorId INT NOT NULL,
    AccountId INT NOT NULL,
    InstrumentNo NVARCHAR(50) NULL,
    InstrumentDate DATETIME2 NULL,
    Amount DECIMAL(18,2) NOT NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Approved', 'Rejected')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (VendorId) REFERENCES Vendors(VendorId),
    FOREIGN KEY (AccountId) REFERENCES Accounts(AccountId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: PaymentApply
CREATE TABLE PaymentApply (
    PaymentApplyId INT PRIMARY KEY IDENTITY(1,1),
    PaymentVoucherId INT NOT NULL,
    PurchaseId INT NOT NULL,
    AppliedAmount DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (PaymentVoucherId) REFERENCES PaymentVouchers(PaymentVoucherId) ON DELETE CASCADE,
    FOREIGN KEY (PurchaseId) REFERENCES Purchases(PurchaseId)
);

-- Table: PaymentVoucherAttachments
CREATE TABLE PaymentVoucherAttachments (
    VoucherAttachmentId INT PRIMARY KEY IDENTITY(1,1),
    PaymentVoucherId INT NOT NULL,
    AttachmentPath NVARCHAR(255) NOT NULL,
    FOREIGN KEY (PaymentVoucherId) REFERENCES PaymentVouchers(PaymentVoucherId) ON DELETE CASCADE
);

-- Table: ReceiptVouchers
CREATE TABLE ReceiptVouchers (
    ReceiptVoucherId INT PRIMARY KEY IDENTITY(1,1),
    ReceiptVoucherNo NVARCHAR(50) NOT NULL UNIQUE,
    ReceiptVoucherDate DATETIME2 NOT NULL,
    VendorId INT NOT NULL,
    AccountId INT NOT NULL,
    InstrumentNo NVARCHAR(50) NULL,
    InstrumentDate DATETIME2 NULL,
    Amount DECIMAL(18,2) NOT NULL,
    Status NVARCHAR(20) NOT NULL CHECK (Status IN ('Pending', 'Approved', 'Rejected')),
    CreatedBy INT NOT NULL,
    CreatedAt DATETIME2 NOT NULL DEFAULT GETDATE(),
    ModifiedBy INT NULL,
    ModifiedAt DATETIME2 NULL,
    FOREIGN KEY (VendorId) REFERENCES Vendors(VendorId),
    FOREIGN KEY (AccountId) REFERENCES Accounts(AccountId),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId),
    FOREIGN KEY (ModifiedBy) REFERENCES Users(UserId)
);

-- Table: ReceiptApply
CREATE TABLE ReceiptApply (
    ReceiptApplyId INT PRIMARY KEY IDENTITY(1,1),
    ReceiptVoucherId INT NOT NULL,
    PurchaseReturnId INT NOT NULL,
    AppliedAmount DECIMAL(18,2) NOT NULL,
    FOREIGN KEY (ReceiptVoucherId) REFERENCES ReceiptVouchers(ReceiptVoucherId) ON DELETE CASCADE,
    FOREIGN KEY (PurchaseReturnId) REFERENCES PurchaseReturn(PurchaseReturnId)
);

-- Table: ReceiptVoucherAttachments
CREATE TABLE ReceiptVoucherAttachments (
    VoucherAttachmentId INT PRIMARY KEY IDENTITY(1,1),
    ReceiptVoucherId INT NOT NULL,
    AttachmentPath NVARCHAR(255) NOT NULL,
    FOREIGN KEY (ReceiptVoucherId) REFERENCES ReceiptVouchers(ReceiptVoucherId) ON DELETE CASCADE
);

-- Table: UserBranchDetial
CREATE TABLE UserBranchDetial (
    UserBranchDetialId INT PRIMARY KEY IDENTITY(1,1),
    UserId INT NOT NULL,
    BranchId INT NOT NULL,
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (BranchId) REFERENCES Branches(BranchId) ON DELETE CASCADE
);


INSERT INTO UnitOfMeasure (Name, Symbol)
VALUES ('Kilogram', 'kg'),
       ('Gram', 'g'),
       ('Liter', 'L'),
       ('Milliliter', 'ml'),
       ('Piece', 'pcs');

INSERT INTO USERS (UserName, Email, Password, IsActive)
VALUES ('Abdul Ahad', 'abdulahad.ad23@gmail.com', '123', 1),
       ('Syeda Saba', 'syedha.sabaali@gmail.com', '123', 1),
       ('Waniya Rana', 'waniyarana@gmail.com', '123', 1),
       ('Abdul Basit', 'abdulbasit@gmail.com', '123', 1);

INSERT INTO ITEMCATEGORY (ItemCategoryName, Description)
VALUES ('Meat', 'All type of meats'),
       ('Spices', 'All type of spices'),
       ('Oils', 'All type of oils'),
       ('Cold Drinks', 'All type of cold drinks');

INSERT INTO VENDORS (Name,CompanyName,Email,Contact,Address,City,Country,PostalCode,CreatedBy)
VALUES  ('Abdul Ahad','AD Store','abdulahad.ad23@gmail.com','03112824123','H-392, Sector 31/D, P&T CHS, Korangi','Karachi','Pakistan','74900',1),
        ('Muhammad Rashid','Rashid & Brothers','rashidbhai@gmail.com','03334323142','R-123, Block-J, Saadi Garden','Karachi','Pakistan','72244',2);

INSERT INTO ITEMS(ItemName,Sku,ItemCategoryId,UnitOfMeasureId, MinimumStockLevel, IsActive, CreatedBy)
VALUES  ('Chicken Chest','CK-13452',1,1,10,1,1),
        ('Beef','BF-11243',1,1,25,1,1),
		('Pepsi 500ml','CD-00212',4,5,50,1,1),
		('Olive Oil','OL-14222',3,3,15,1,1),
		('Black Pepper','SP-11678',2,1,5,1,1);

INSERT INTO WAREHOUSEITEMSTOCK (ItemId,Quantity,CostPerUnit)
VALUES  (1,44,9700),
        (2,19,12700),
		(3,0,0),
		(4,16,15890),
		(5,2,300);


INSERT INTO WAREHOUSEITEMTRANSACTION (TransactionDate,ItemId,TransactionType,TransactionTypeId,Quantity,CostPerUnit)
VALUES  (SYSDATETIME(),1,'Opening',1,44,250),
        (SYSDATETIME(),2,'Opening',2,19,180),
		(SYSDATETIME(),3,'Opening',3,0,0),
		(SYSDATETIME(),4,'Opening',4,16,700),
		(SYSDATETIME(),5,'Opening',5,2,150);
