@model Ressential.Models.RoleViewModel

@{
    ViewBag.Title = "Edit Role";
    Layout = "~/Views/Shared/_WarehouseLayout.cshtml";
}

<style>
    .custom-toggle .form-check-input:checked {
        background-color: #007bff; /* Change this color to your desired color */
        border-color: #007bff; /* Change this color to your desired color */
    }
</style>

<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }
                <h2 class="text-secondary"><b>Edit Role</b></h2>

                @using (Html.BeginForm("EditRole", "Warehouse", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.Role.RoleId)
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.Role.RoleName, new { @class = "form-control", placeholder = "Role Name" })
                                <label for="floatingInput">Role Name</label>
                                @Html.ValidationMessageFor(model => model.Role.RoleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h3>Permissions</h3>
                            <table class="table table-bordered">
                                <tbody>
                                    @if (Model.PermissionsCategories.Any(c => c.PermissionModule == "Warehouse"))
                                    {
                                        <tr class="table-primary">
                                            <td colspan="100">
                                                <strong>Warehouse Permissions</strong>
                                                <div class="form-check form-switch d-inline-block float-end custom-toggle">
                                                    <input class="form-check-input" type="checkbox" id="toggleWarehousePermissions">
                                                    <label class="form-check-label" for="toggleWarehousePermissions">All Warehouse Permissions</label>
                                                </div>
                                            </td>
                                        </tr>
                                        foreach (var category in Model.PermissionsCategories.Where(c => c.PermissionModule == "Warehouse"))
                                        {
                                            <tr>
                                                <td>@category.PermissionCategoryName</td>
                                                @foreach (var permission in category.Permissions)
                                                {
                                                    <td>
                                                        <div class="form-check form-switch">
                                                            <input class="form-check-input permission-checkbox warehouse-permission" type="checkbox" id="permission_@permission.PermissionId" name="SelectedPermissions" value="@permission.PermissionId" @(Model.SelectedPermissions.Contains(permission.PermissionId) ? "checked" : "")>
                                                            <label class="form-check-label" for="permission_@permission.PermissionId">@permission.PermissionName</label>
                                                        </div>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }

                                    @if (Model.PermissionsCategories.Any(c => c.PermissionModule == "Kitchen"))
                                    {
                                        <tr class="table-primary">
                                            <td colspan="100">
                                                <strong>Kitchen Permissions</strong>
                                                <div class="form-check form-switch d-inline-block float-end custom-toggle">
                                                    <input class="form-check-input" type="checkbox" id="toggleKitchenPermissions">
                                                    <label class="form-check-label" for="toggleKitchenPermissions">All Kitchen Permissions</label>
                                                </div>
                                            </td>
                                        </tr>
                                        foreach (var category in Model.PermissionsCategories.Where(c => c.PermissionModule == "Kitchen"))
                                        {
                                            <tr>
                                                <td>@category.PermissionCategoryName</td>
                                                @foreach (var permission in category.Permissions)
                                                {
                                                    <td>
                                                        <div class="form-check form-switch">
                                                            <input class="form-check-input permission-checkbox kitchen-permission" type="checkbox" id="permission_@permission.PermissionId" name="SelectedPermissions" value="@permission.PermissionId" @(Model.SelectedPermissions.Contains(permission.PermissionId) ? "checked" : "")>
                                                            <label class="form-check-label" for="permission_@permission.PermissionId">@permission.PermissionName</label>
                                                        </div>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-sm-9">
                                    <button type="submit" class="btn btn-secondary mr-2 ps-4 pe-4">Save</button>
                                    <a href="@Url.Action("RoleList","Warehouse")" class="btn btn-light ms-1 ps-4 pe-4">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('toggleWarehousePermissions').addEventListener('change', function () {
            const checkboxes = document.querySelectorAll('.warehouse-permission');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });

        document.getElementById('toggleKitchenPermissions').addEventListener('change', function () {
            const checkboxes = document.querySelectorAll('.kitchen-permission');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });
    });</script>

