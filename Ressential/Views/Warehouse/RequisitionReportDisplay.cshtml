@model IEnumerable<Ressential.Models.RequisitionReportViewModel>

<!DOCTYPE html>
<html>
<head>
    <title>Requisition Report</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 20px;
            color: #333;
            background-color: #ffffff;
        }

        .report-header {
            position: relative;
            margin-bottom: 30px;
            border-bottom: 2px solid #2c3e50;
            padding-bottom: 15px;
        }

        .header-content {
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            padding-left: 100px; /* Make space for the logo */
        }

        .logo-container {
            position: absolute;
            left: 0;
            display: flex;
            align-items: center;
        }

        .logo-container img {
            max-height: 100px;
            object-fit: contain;
        }

        .header-text {
            text-align: center;
        }

        .header-text h1 {
            margin: 0;
            font-size: 28px;
            color: #2c3e50;
            font-weight: 600;
        }

        .header-text p {
            margin: 5px 0;
            font-size: 15px;
            color: #555;
        }

        .date-range-container {
            position: absolute;
            top: 0;
            right: 0;
        }

        .date-range {
            background-color: #f5f7fa;
            padding: 10px 15px;
            border-radius: 6px;
            border-left: 4px solid #3498db;
            text-align: left;
        }

        .date-range p {
            margin: 5px 0;
            font-size: 14px;
        }

        .date-range span {
            font-weight: bold;
            color: #2c3e50;
        }

        .report-details {
            margin-bottom: 20px;
            font-size: 14px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            font-size: 14px;
            page-break-inside: auto;
        }

        .table thead {
            display: table-header-group;
            page-break-inside: avoid;
            page-break-after: auto;
        }
        
        .table tfoot {
            /* Prevent footer from being a table-footer-group so it doesn't repeat on every page */
            display: table-row-group;
            page-break-inside: avoid;
            page-break-before: avoid;
        }
        
        .table .total-footer {
            /* Ensure totals are at the end and only on the last page */
            break-inside: avoid;
            break-before: auto;
            break-after: auto;
        }
        
        .table tr {
            page-break-inside: avoid;
            page-break-after: auto;
        }
        
        .table tbody {
            page-break-inside: auto;
        }

        .table th, .table td {
            border: 1px solid #e0e0e0;
            padding: 12px;
            text-align: left;
        }

        .table th {
            background-color: #2c3e50;
            color: white;
            font-weight: 500;
        }

        .table tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table tfoot td {
            font-weight: bold;
            background-color: #eaecef;
            color: #2c3e50;
        }

        .no-data {
            text-align: center;
            font-style: italic;
            color: #888;
            padding: 20px;
        }

        .timestamp {
            font-size: 13px;
            color: #6c757d;
            margin-top: 5px;
        }
        
        .action-buttons {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
            gap: 10px;
        }

        .btn {
            padding: 8px 15px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            font-size: 14px;
            cursor: pointer;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-export {
            background-color: #27ae60;
            color: white;
        }

        .btn-export:hover {
            background-color: #219653;
        }

        .btn-pdf {
            background-color: #e74c3c;
            color: white;
        }

        .btn-pdf:hover {
            background-color: #c0392b;
        }
        
        .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-pending {
            background-color: #f39c12;
            color: white;
        }
        
        .status-settled {
            background-color: #2ecc71;
            color: white;
        }
        
        .status-rejected {
            background-color: #e74c3c;
            color: white;
        }

        .status-partially-settled {
            background-color: #3498db;
            color: white;
        }
        
        .detail-table {
            margin-top: 5px;
            width: 100%;
            border-collapse: collapse;
            font-size: 12px;
        }
        
        .detail-table th, .detail-table td {
            border: 1px solid #e0e0e0;
            padding: 6px;
            text-align: left;
        }
        
        .detail-table th {
            background-color: #34495e;
            color: white;
        }
        
        .detail-section {
            margin-top: 10px;
            margin-bottom: 30px;
        }
        
        .detail-header {
            background-color: #f5f7fa;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 10px;
            border-left: 4px solid #3498db;
        }
        
        /* PDF specific styles */
        @@media print {
            .report-header {
                position: static;
            }
            
            .table {
                margin-top: 30px;
            }
            
            .table thead tr th {
                background-color: #2c3e50 !important;
                color: white !important;
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="report-header">
            <div class="header-content">
                <div class="logo-container">
                    <img src="~/Content/assets/images/logo/ressential-logo.png" alt="Ressential Logo" />
                </div>
                <div class="header-text">
                    <h1>Requisition Report</h1>
                    <p>@(ViewBag.ReportType == "summary" ? "Summary Report" : "Detailed Report")</p>
                    <p>Branch: @ViewBag.BranchName</p>
                    <p class="timestamp">Generated On: @ViewBag.GeneratedTimestamp</p>
                </div>
            </div>
            
            <div class="date-range-container">
                <div class="date-range">
                    <p><span>From Date:</span> @(ViewBag.FromDate != null ? ViewBag.FromDate : "All")</p>
                    <p><span>To Date:</span> @(ViewBag.ToDate != null ? ViewBag.ToDate : "All")</p>
                    @if (ViewBag.Status != null && ViewBag.Status != "0")
                    {
                        <p><span>Status:</span> @ViewBag.StatusText</p>
                    }
                </div>
            </div>
        </div>

        <div class="action-buttons">
            @{
                var isPdfExport = ViewBag.IsPdfExport == true;
            }
            @if (!isPdfExport)
            {
                <button class="btn btn-export" onclick="exportToExcel()">Export</button>
                <button class="btn btn-pdf" onclick="exportToPDF()">PDF</button>
            }
        </div>

        @if (ViewBag.ReportType == "summary")
        {
            <!-- Summary Report View -->
            <table class="table">
                <thead>
                    <tr>
                        <th>S.No</th>
                        <th>Requisition No</th>
                        <th>Date</th>
                        <th>Branch</th>
                        <th>Description</th>
                        <th>Total Items</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int serialNo = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@serialNo</td>
                                <td>
                                    <a href="@Url.Action("CreateIssue", "Warehouse", new { requisitionId = item.RequisitionId })" 
                                       target="_blank" class="text-primary font-weight-bold text-decoration-underline">
                                        @item.RequisitionNo
                                    </a>
                                </td>
                                <td>@item.Date.ToString("yyyy-MM-dd")</td>
                                <td>@item.BranchName</td>
                                <td>@item.Description</td>
                                <td>@item.TotalItems</td>
                                <td>
                                    @{
                                        string statusClass = "status-pending";
                                        if (item.Status == "Settled") { statusClass = "status-settled"; }
                                        else if (item.Status == "Partially Settled") { statusClass = "status-partially-settled"; }
                                        else if (item.Status == "Rejected") { statusClass = "status-rejected"; }
                                    }
                                    <span class="status-badge @statusClass">@item.Status</span>
                                </td>
                            </tr>
                            serialNo++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="no-data">No data available</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="total-footer">
                    <tr>
                        <td colspan="5" style="text-align: right;"><strong>Total Requisitions</strong></td>
                        <td colspan="2">@(Model != null ? Model.Count() : 0)</td>
                    </tr>
                </tfoot>
            </table>
        }
        else
        {
            <!-- Detailed Report View in Tabular Format -->
            <table class="table">
                <thead>
                    <tr>
                        <th>S.No</th>
                        <th>Requisition No</th>
                        <th>Date</th>
                        <th>Branch</th>
                        <th>Description</th>
                        <th>Item</th>
                        <th>Unit</th>
                        <th>Requested Qty</th>
                        <th>Issued Qty</th>
                        <th>Remaining Qty</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int serialNo = 1;
                        foreach (var requisition in Model)
                        {
                            if (requisition.Items != null && requisition.Items.Any())
                            {
                                foreach (var item in requisition.Items)
                                {
                                    <tr>
                                        <td>@(serialNo++)</td>
                                        <td>
                                            <a href="@Url.Action("CreateIssue", "Warehouse", new { requisitionId = requisition.RequisitionId })" 
                                               target="_blank" class="text-primary font-weight-bold text-decoration-underline">
                                                @requisition.RequisitionNo
                                            </a>
                                        </td>
                                        <td>@requisition.Date.ToString("yyyy-MM-dd")</td>
                                        <td>@requisition.BranchName</td>
                                        <td>@requisition.Description</td>
                                        <td>@item.ItemName</td>
                                        <td>@item.Unit</td>
                                        <td>@item.RequestedQuantity.ToString("N2")</td>
                                        <td>@item.IssuedQuantity.ToString("N2")</td>
                                        <td>@item.RemainingQuantity.ToString("N2")</td>
                                        <td>
                                            @{
                                                string statusClass = "status-pending";
                                                if (requisition.Status == "Settled") { statusClass = "status-settled"; }
                                                else if (requisition.Status == "Partially Settled") { statusClass = "status-partially-settled"; }
                                                else if (requisition.Status == "Rejected") { statusClass = "status-rejected"; }
                                            }
                                            <span class="status-badge @statusClass">@requisition.Status</span>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="no-data">No data available</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="total-footer">
                    <tr>
                        <td colspan="7" style="text-align: right;"><strong>Total Requested Quantity</strong></td>
                        <td>@(Model != null ? Model.Where(r => r.Items != null).SelectMany(r => r.Items).Sum(i => i.RequestedQuantity).ToString("N2") : "0.00")</td>
                        <td>@(Model != null ? Model.Where(r => r.Items != null).SelectMany(r => r.Items).Sum(i => i.IssuedQuantity).ToString("N2") : "0.00")</td>
                        <td>@(Model != null ? Model.Where(r => r.Items != null).SelectMany(r => r.Items).Sum(i => i.RemainingQuantity).ToString("N2") : "0.00")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        }

    </div>

    <script>
        function exportToExcel() {
            var branchId = '@ViewBag.BranchId';
            var fromDate = '@ViewBag.FromDate';
            var toDate = '@ViewBag.ToDate';
            var status = '@ViewBag.Status';
            var reportType = '@ViewBag.ReportType';
            
            var url = '@Url.Action("ExportRequisitionReportToExcel", "Warehouse")' +
                '?branchId=' + encodeURIComponent(branchId) +
                '&fromDate=' + encodeURIComponent(fromDate) +
                '&toDate=' + encodeURIComponent(toDate) +
                '&status=' + encodeURIComponent(status) +
                '&reportType=' + encodeURIComponent(reportType);
                
            window.location.href = url;
        }

        function exportToPDF() {
            var branchId = '@ViewBag.BranchId';
            var fromDate = '@ViewBag.FromDate';
            var toDate = '@ViewBag.ToDate';
            var status = '@ViewBag.Status';
            var reportType = '@ViewBag.ReportType';
            
            var url = '@Url.Action("ExportRequisitionReportToPDF", "Warehouse")' +
                '?branchId=' + encodeURIComponent(branchId) +
                '&fromDate=' + encodeURIComponent(fromDate) +
                '&toDate=' + encodeURIComponent(toDate) +
                '&status=' + encodeURIComponent(status) +
                '&reportType=' + encodeURIComponent(reportType);
                
            window.location.href = url;
        }
    </script>
</body>
</html> 