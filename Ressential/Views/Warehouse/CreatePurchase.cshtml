@model Ressential.Models.Purchase

@{
    ViewBag.Title = "CreatePurchase";
    Layout = "~/Views/Shared/_WarehouseLayout.cshtml";
}

@using (Html.BeginForm("CreatePurchase", "Warehouse", FormMethod.Post, new { id = "createPurchaseForm" }))
{
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle pe-3" aria-hidden="true"></i>
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            <i class="fa fa-check pe-3" aria-hidden="true"></i>
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    <h2 class="text-secondary"><b>Create Purchase</b></h2>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.PurchaseDate, DateTime.Now.ToString("yyyy-MM-dd"),new { @class = "form-control", @placeholder = "Purchase Date", @type = "date" })
                                <label for="floatingInput">Purchase Date</label>
                                @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.ReferenceNo, new { @class = "form-control", @placeholder = "Reference No" })
                                <label for="floatingInput">Reference No</label>
                                @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.DropDownListFor(model => model.VendorId, new SelectList(ViewBag.Vendors, "VendorId", "Name"), "Select Vendor", new { @class = "form-control" })
                                <label for="floatingInput">Vendor</label>
                                @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.Memo, new { @class = "form-control", @placeholder = "Memo" })
                                <label for="floatingInput">Memo</label>
                                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <h2 class="text-secondary pt-3"><b>Items</b></h2>
                    <div class="row">
                        <div class="container">
                            <span class="text-danger " id="itemsError"></span>
                            <div class="table-responsive tab-content">
                                <table id="itemsTable" class="table table-hover">
                                    <tbody id="itemsTableBody">
                                        @foreach (var item in Model.PurchaseDetails)
                                        {
                                            <tr class="item-row">
                                                <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <select class="form-control" name="PurchaseDetails[@item.ItemId].ItemId">
                                                            <option value="0">Select Item</option>
                                                            @foreach (var i in ViewBag.Items)
                                                            {
                                                                <option value="@i.ItemId" @(i.ItemId == item.ItemId ? "selected" : "")>@i.ItemName</option>
                                                            }
                                                        </select>
                                                        <label>Item</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => item.Description, new { @class = "form-control", @placeholder = "Description" })
                                                        <label>Description</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => item.Quantity, new { @class = "form-control quantity", @placeholder = "Quantity" })
                                                        <label>Quantity</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => item.UnitPrice, new { @class = "form-control unitPrice", @placeholder = "Unit Price" })
                                                        <label>Unit Price</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control total" placeholder="Total" name="total[]">
                                                        <label>Total</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-1">
                                                    <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn" type="button" data-toggle="tooltip" data-placement="top" title="Remove">
                                                        <i class="fa fa-times"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <!-- Add Row Button -->
                            <button class="btn btn-light-success btn-sm rounded-0 ms-3 mb-3" id="addRowBtn" type="button">
                                <i class="fa fa-plus-square d-flex p-1">
                                    <span class="ps-2 m-0">Add More</span>
                                </i>
                            </button>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-3 ms-auto">
                                <label for="totalAmount" class="form-label"><b>Total Amount:</b></label>
                                <div class="input-group">
                                    <span class="input-group-text">Rs</span>
                                    <input type="number" class="form-control" id="totalAmount" placeholder="Total Amount" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-5">
                            <div class=" row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-sm-9">
                                            <button id="CreatePurchase" type="button" class="btn btn-secondary mr-2 ps-4 pe-4 btn-save">
                                                Save
                                            </button>
                                            <button class="btn btn-light ms-1 ps-4 pe-4">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        // Add row when clicking "Add More"
        $('#addRowBtn').click(function () {
            let newRow = $('#itemsTableBody .item-row').last().clone();
            newRow.find("input").val(""); // Clear input values
            newRow.find("select").val("0"); // Clear dropdowns

            // Increment row index for the new row to avoid conflicts
            let index = $('#itemsTableBody .item-row').length;

            // Update name attributes to match the model binding format
            newRow.find('select[name^="PurchaseDetails"]').attr("name", `PurchaseDetails[${index}].ItemId`);
            newRow.find('input[name^="PurchaseDetails"][name*=".Description"]').attr("name", `PurchaseDetails[${index}].Description`);
            newRow.find('input[name^="PurchaseDetails"][name*=".Quantity"]').attr("name", `PurchaseDetails[${index}].Quantity`);
            newRow.find('input[name^="PurchaseDetails"][name*=".UnitPrice"]').attr("name", `PurchaseDetails[${index}].UnitPrice`);

            $('#itemsTableBody').append(newRow); // Append the new row to the table body
        });

        // Remove row when clicking the remove button
        $(document).on('click', '.removeRowBtn', function () {
            if ($('#itemsTableBody .item-row').length > 1) {
                $(this).tooltip('dispose');
                $(this).closest('.item-row').remove();
            } else {
                alert("At least one item is required.");
            }
        });

        // Validate on form submit
        $('#CreatePurchase').on('click', function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Validate the form using jQuery Validate
            var form = $('#createPurchaseForm');

            if (form.valid()) {
                let isValid = true;
                let errorMessage = "";

                // Initialize an object to hold all data
                let purchase = {
                    PurchaseDetails: [],
                    purchaseDate: $('#PurchaseDate').val(),
                    referenceNo: $('#ReferenceNo').val(),
                    vendorId: $('#VendorId').val(),
                    memo: $('#Memo').val()
                };

                // Find all rows in the tbody
                $('#itemsTableBody .item-row').each(function () {
                    // Initialize an object to hold the values for each row
                    let rowData = {};

                    // Get the selected item from the dropdown
                    rowData.ItemId = $(this).find('select').val();

                    if (rowData.ItemId == "0") {
                        isValid = false;
                        errorMessage = "Please select an item for each row.";
                    }

                    // Get the description
                    rowData.Description = $(this).find('input[name="item.Description"]').val();

                    // Get the quantity
                    rowData.Quantity = $(this).find('input[name="item.Quantity"]').val();

                    // Get the unit price
                    rowData.UnitPrice = $(this).find('input[name="item.UnitPrice"]').val();

                    // Get the total
                    rowData.total = $(this).find('input[name="total[]"]').val();

                    // Add the row data to the purchaseData.items array
                    purchase.PurchaseDetails.push(rowData);
                });

                if (isValid) {
                    // Now you can use purchaseData for your purposes
                    console.log(purchase);

                    // Example: you might want to send this data to a server
                    $.ajax({
                        url: '@Url.Action("CreatePurchase", "WareHouse")',
                        method: 'POST',
                        data: JSON.stringify(purchase),
                        contentType: 'application/json',
                        success: function (response) {
                            if (response == "0") {
                                window.location.href = '@Url.Action("PurchaseList","Warehouse")'
                            } else if (response == "1") {
                                window.location.href = '@Url.Action("Index","Error")'
                            }
                            else if (response.status == "warning") {
                                if (confirm(response.message)) {
                                    // User clicked OK, proceed with the purchase
                                    purchase.confirmDuplicate = true;
                                    $.ajax({
                                        url: '@Url.Action("CreatePurchase", "WareHouse")',
                                        method: 'POST',
                                        data: JSON.stringify(purchase),
                                        contentType: 'application/json',
                                        success: function (response) {
                                            if (response == "0") {
                                                window.location.href = '@Url.Action("PurchaseList","Warehouse")'
                                            } else if (response == "1") {
                                                window.location.href = '@Url.Action("Index","Error")'
                                            }
                                        }
                                    });
                                }
                            }
                            else if (response.status == "error") {
                                alert(response.message);
                            }
                        }
                    });
                } else {
                    // Form is invalid, show error messages
                    $('#itemsError').text(errorMessage);
                    console.log('Form validation failed.');
                }
            } else {
                // Form is invalid, show error messages
                $('#itemsError').text("Each item must be selected, and quantity and unit price must be greater than 0.");
                console.log('Form validation failed.');
            }
        });
    });
</script>


