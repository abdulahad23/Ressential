@model IEnumerable<Ressential.Models.Branch>
@using Ressential.Utilities 

@{ ViewBag.Title = "BranchList";
    Layout = "~/Views/Shared/_WarehouseLayout.cshtml"; }


<div class="card">
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
<div class="alert alert-danger">
    @TempData["ErrorMessage"]
</div>}
        @if (TempData["SuccessMessage"] != null)
        {
<div class="alert alert-success">
    @TempData["SuccessMessage"]
</div>}

        <div class="row">
            <div class="col-md-3">
                <div class="input-group input-group-sm mb-3">
                    <select class="form-select" id="actionDropdown" aria-label="Select action">
                        <option selected>Choose Action</option>
                        @if (Html.HasPermission("Branch Delete"))
                        {
                            <option value="delete">Delete</option>
                        }
                    </select>
                    <button class="btn btn-secondary" type="button" onclick="applyAction()">Apply</button>
                </div>
            </div>

            <div class="col-md-3 ms-auto">
                <form id="searchForm" action="@Url.Action("BranchList", "Warehouse")" method="get">
                    <div class="input-group input-group-sm mb-3">
                        <input type="text" name="search" class="form-control" id="floatingInput" placeholder="Search" value="@Request.QueryString["search"]">
                        <button class="btn btn-secondary" type="submit"><i class="fas fa-search"></i></button>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <form id="actionForm" action="@Url.Action("DeleteSelectedBranches", "Warehouse")" method="post">
                <table class="table table-bordered table-hover">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" class="fit-content">
                                <input class="form-check-input" type="checkbox" value="" id="selectAll" onclick="toggleAll(this)">
                            </th>
                            <th scope="col">Branch Name</th>
                            <th scope="col">Branch Code</th>
                            <th scope="col">Branch Contact</th>
                            <th scope="col">Owner Name</th>
                            <th scope="col">Branch Address</th>
                            <th scope="col">Status</th>
                            <th scope="col" class="fit-content">Option</th>


                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var branch in Model)
                        {
                        <tr>
                            <td><input type="checkbox" class="form-check-input item-checkbox" name="selectedItems" value="@branch.BranchId" aria-label="Select Branch"></td>
                            <td>@branch.BranchName</td>
                            <td>@branch.BranchCode</td>
                            <td>@branch.BranchContact</td>
                            <td>@branch.OwnerName</td>


                            <td>@(branch.Address + ((branch.Address != null && branch.City != null)? ", " : "") + branch.City + ((branch.City != null && branch.Country != null)|| (branch.Address != null && branch.Country != null) ? ", " : "")+ branch.Country)</td>
                            <td class="no-wrap">
                                @if (branch.IsActive)
                                {
                        <span style="background-color: forestgreen;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                            Active
                        </span> }
                    else
                    {
                        <span style="background-color: lightslategrey;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                            Inactive
                        </span>}
                            </td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false" style="background: none; border: none;">
                                        <i class="bi bi-three-dots-vertical" style="font-size: 1.5rem;"></i>
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        @if (Html.HasPermission("Branch Edit"))
                                        {
                                            <li><button class="dropdown-item" type="button" onclick="submitEditForm(@branch.BranchId)"><i class="bi bi-pencil" style="font-size: 1.25rem;"></i> Edit</button></li>
                                        }
                                        @if (Html.HasPermission("Branch Delete"))
                                        {
                                            <li><button class="dropdown-item" type="button" onclick="submitDeleteForm(@branch.BranchId)"><i class="bi bi-trash" style="font-size: 1.25rem;"></i> Delete</button></li>
                                        }
                                    </ul>
                                </div>
                            </td>
                        </tr>}

                    </tbody>
                </table>
            </form>
            <!-- Hidden Form for Edit/Delete Actions -->
            <form id="editDeleteForm" method="post" style="display: none;">
                <input type="hidden" name="BranchId" id="formBranchId" />
            </form>
        </div>
    </div>
</div>


<script>
    // Function to toggle all checkboxes
    function toggleAll(source) {
        const checkboxes = document.querySelectorAll('.item-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = source.checked);
    }

    function applyAction() {
        const action = document.getElementById("actionDropdown").value;
        const checkboxes = document.querySelectorAll('.item-checkbox:checked');

        if (action === "delete") {
            if (checkboxes.length === 0) {
                alert("No records selected to delete.");
                return;
            }
            if (confirm("Are you sure you want to delete the selected records?")) {
                document.getElementById("actionForm").submit();
            }
        }
    }

    function submitEditForm(BranchId) {
        const form = document.getElementById("editDeleteForm");
        form.action = "@Url.Action("EditBranch", "Warehouse")";
        document.getElementById("formBranchId").value = BranchId;
        form.method = "get";
        form.submit();
    }

    function submitDeleteForm(BranchId) {
        if (confirm('Are you sure you want to delete this record?')) {
            const form = document.getElementById("editDeleteForm");
            form.action = "@Url.Action("DeleteBranch", "Warehouse")";
            document.getElementById("formBranchId").value = BranchId;
            form.method = "post";
            form.submit();
        }
    }
</script>