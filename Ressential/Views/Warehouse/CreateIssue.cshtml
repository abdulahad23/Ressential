@model Ressential.Models.WarehouseIssueHelper

@{
    ViewBag.Title = "CreateIssue";
    Layout = "~/Views/Shared/_WarehouseLayout.cshtml";
}

@using (Html.BeginForm("CreateIssue", "Warehouse", FormMethod.Post))
{
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    <div class="alert alert-danger d-none" id="error-message">
                    </div>
                    <h2 class="text-secondary"><b>Create Issue</b></h2>
                    <div class="row">
                        @Html.HiddenFor(model => model.BranchID)
                        @Html.HiddenFor(model => model.RequisitionId)
                        @Html.HiddenFor(model => model.Status)
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.IssueDate, DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control", @placeholder = "Issue Date", @type = "date" })
                                <label for="floatingInput">Issue Date</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.ReferenceNo, "", new { @class = "form-control", @placeholder = "Reference No" })
                                <label for="floatingInput">Reference No</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.BranchName, "", new { @class = "form-control", @placeholder = "Branch", @readonly = "readonly" })
                                <label for="floatingInput">Branch</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.RequisitionNo, "", new { @class = "form-control", @placeholder = "Requisition", @readonly = "readonly" })
                                <label for="floatingInput">Requisition</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.Memo, "", new { @class = "form-control", @placeholder = "Memo" })
                                <label for="floatingInput">Memo</label>
                            </div>
                        </div>
                    </div>
                    <h2 class="text-secondary pt-3"><b>Items</b></h2>
                    <div class="row">
                        <div class="container">
                            <div class="table-responsive tab-content">
                                <table id="itemsTable" class="table table-hover">
                                    <tbody id="itemsTableBody">
                                        @{
                                            var warehouseIssueDetailsList = Model.WarehouseIssueDetails.ToList();
                                        }
                                        @for (int i = 0; i < warehouseIssueDetailsList.Count; i++)
                                        {
                                            <tr class="item-row">
                                                @Html.HiddenFor(m => warehouseIssueDetailsList[i].ItemId)
                                                @Html.HiddenFor(m => warehouseIssueDetailsList[i].ItemName)
                                                <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => warehouseIssueDetailsList[i].ItemName, new { @class = "form-control", @placeholder = "Item", @readonly = "readonly" })
                                                        <label>Item</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => warehouseIssueDetailsList[i].Description, new { @class = "form-control", @placeholder = "Description" })
                                                        <label>Description</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => warehouseIssueDetailsList[i].RequestedQuantity, new { @class = "form-control", @placeholder = "Requested Quantity", @readonly = "readonly" })
                                                        <label>Requested Quantity</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => warehouseIssueDetailsList[i].PreviousIssuedQuantity, new { @class = "form-control", @placeholder = "Issued Quantity", @readonly = "readonly" })
                                                        <label>Issued Quantity</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        @Html.TextBoxFor(m => warehouseIssueDetailsList[i].IssuedQuantity, new { @class = "form-control", @placeholder = "Current Issue Quantity" })
                                                        <label>Current Issue Quantity</label>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row mt-5">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-sm-9">
                                            <button id="CreateIssue" type="button" class="btn btn-secondary mr-2 ps-4 pe-4">
                                                Save
                                            </button>
                                            <a href="@Url.Action("RequisitionList","Warehouse")" class="btn btn-light ms-1 ps-4 pe-4">Cancel</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {

        $('#CreateIssue').on('click', function () {
            // Initialize an object to hold all data
            let warehouseIssue = {
                WarehouseIssueDetails: [],
                IssueDate: $('#IssueDate').val(),
                ReferenceNo: $('#ReferenceNo').val(),
                BranchID: $('#BranchID').val(),
                RequisitionId: $('#RequisitionId').val(),
                Memo: $('#Memo').val()
            };

            // Find all rows in the tbody
            $('#itemsTableBody .item-row').each(function () {
                // Initialize an object to hold the values for each row
                let rowData = {};

                // Get the selected item from the dropdown
                rowData.ItemId = $(this).find('input[name*=".ItemId"]').val();

                // Get the selected item from the dropdown
                rowData.ItemName = $(this).find('input[name*=".ItemName"]').val();

                // Get the description
                rowData.Description = $(this).find('input[name*=".Description"]').val();

                // Get the requested quantity
                rowData.RequestedQuantity = $(this).find('input[name*=".RequestedQuantity"]').val();

                // Get the requested quantity
                rowData.PreviousIssuedQuantity = $(this).find('input[name*=".PreviousIssuedQuantity"]').val();

                // Get the issued quantity
                rowData.IssuedQuantity = $(this).find('input[name*=".IssuedQuantity"]').val();

                // Add the row data to the warehouseIssue.WarehouseIssueDetails array
                warehouseIssue.WarehouseIssueDetails.push(rowData);
            });

            // Now you can use warehouseIssue for your purposes
            console.log(warehouseIssue);

            // Example: you might want to send this data to a server
            $.ajax({
                url: '@Url.Action("CreateIssue", "Warehouse")',
                method: 'POST',
                data: JSON.stringify(warehouseIssue),
                contentType: 'application/json',
                success: function (response) {
                    if (response.success) {
                        window.location.href = '@Url.Action("IssueList", "Warehouse")';
                    }
                    else if (response.errorMessage) {
                        $('#error-message').text(response.errorMessage).removeClass('d-none').show();
                        $('html, body').animate({ scrollTop: 0 }, 'fast');
                    }
                    else {
                        if (response.redirect) {
                            window.location.href = response.redirect;
                        }
                    }
                },
                error: function () {
                    alert("An error occurred while creating the issue.");
                }
            });
        });
    });
</script>

