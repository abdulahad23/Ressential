@using Ressential.Models
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/CustomerLayout.cshtml";
}

<div class="hero-wrap hero-bread" style="background-image: url('/Content/CustomerAssets/images/BG4.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="@Url.Action("Index", "Customer")" style="color: #fff; text-decoration: none; font-weight: bold;">Home</a> </span> <span>  <a href="@Url.Action("Cart", "Customer")" style="color: #fff; text-decoration: none; font-weight: bold;">Cart</a> </span></p>
                <h1 style="font-size: 48px; font-weight: bold; color: #fff; text-align: center; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); margin: 20px 0; ">MY CART</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section ftco-cart">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="cart-list">
                    <table class="table">
                        <thead class="thead-primary">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>Product name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Session["Cart"] as List<Cart> != null)
                            {
                                foreach (var item in Session["Cart"] as List<Cart>)
                                {
                                    <tr class="text-center" id="cart-item-@item.ProductID" data-product-id="@item.ProductID">
                                        <td class="product-remove">
                                            <a href="javascript:void(0);" onclick="removeFromCart(@item.ProductID)" class="bg-danger text-white">
                                                <span class="ion-ios-close"></span>
                                            </a>
                                        </td>
                                        <td class="image-prod">
                                            <div class="img" style="background-image: url('@Url.Content("~/Uploads/ProductImages/"+ item.ProductImage)');"></div>
                                        </td>


                                        <td class="product-name">
                                            @*<h3>@item.ProductID</h3>*@
                                            <h3>@item.ProductName</h3>
                                        </td>

                                        <td class="price">Rs @item.Price</td>
                                        <td class="quantity">
                                            <div class="input-group align-items-center">
                                                <button class="btn btn-outline-light btn-decrement" type="button" style="width: 40px; height: 40px !important;">-</button>
                                                <input type="text" name="quantity" class="quantity form-control input-number quantity-input m-2" value="@item.Quantity" min="1" max="100" style="text-align: center;" disabled>
                                                <button class="btn btn-outline-light btn-increment" type="button" style="width: 40px; height: 40px !important;">+</button>
                                            </div>
                                        </td>
                                        <td class="total" id="item-total-@item.ProductID">Rs @item.TotalPrice</td>
                                    </tr>
                                }
                            }


                        </tbody>

                    </table>

                </div>
            </div>
        </div>
        <div class="row justify-content-end">

            <div class="col-lg-4 mt-5 cart-wrap ftco-animate">
                <div class="cart-total mb-3">
                    <h3>Cart Totals</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span id="cartSubtotal">Rs @ViewBag.Subtotal.ToString("0.00")</span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span id="deliveryCharges">Rs @ViewBag.DeliveryCharges.ToString("0.00")</span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span id="cartTotal">Rs @ViewBag.CartTotal.ToString("0.00")</span> <!-- Display the total -->
                    </p>
                </div>
                <p><a href="javascript:void(0);" onclick="proceedToCheckout()" class="btn btn-secondary py-3 px-4">Proceed to Checkout</a></p>
                <p><a href="@Url.Action("EmptyCart", "Customer")" class="btn btn-outline-dark py-3 px-4" id="empty-cart">Clear Cart</a></p>

            </div>
        </div>
    </div>
</section>

<section class="ftco-section ftco-no-pt ftco-no-pb py-5 bg-light">
    <div class="container py-4">
        <div class="row d-flex justify-content-center py-5">
            <div class="col-md-6">
                <h2 style="font-size: 22px;" class="mb-0">Subcribe to our Newsletter</h2>
                <span>Get e-mail updates about our latest shops and special offers</span>
            </div>
            <div class="col-md-6 d-flex align-items-center">
                <form action="#" class="subscribe-form">
                    <div class="form-group d-flex">
                        <input type="text" class="form-control" placeholder="Enter email address">
                        <input type="submit" value="Subscribe" class="submit px-3">
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<script>
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) { // Check if the page is loaded from cache
            location.reload(); // Reload the page
        }
    });
</script>

<script>
    function removeFromCart(productId) {
    $.ajax({
        url: '@Url.Action("RemoveFromCart", "Customer")',
        type: 'POST',
        data: { productId: productId },
        success: function (response) {
            // Update the cart count and total displayed on the page
            $('#cart-count').text(response.cartCount); // Update the cart count

            //Update delivery charges
            $('#deliveryCharges').text(response.deliveryCharges.toFixed(2));

            $('#cartSubtotal').text(response.cartSubtotal.toFixed(2));

            // Update the total amount
            $('#cartTotal').text('Rs ' + response.cartTotal.toFixed(2)); // Update the total amount

            // Optionally, you can remove the row from the table after item is removed
            $('#cart-item-' + productId).remove();

            // Optionally, you can check if the cart is empty and update the UI accordingly
            if (response.cartCount === 0) {
                // For example, show a message or hide the cart section
                $('.cart-list').html('<p>Your cart is empty.</p>');
            }
        },
        error: function () {
            alert("Error removing item from cart.");
        }
    });
}

</script>

<script>
    // Increment button event listener
document.querySelectorAll('.btn-increment').forEach(function (button) {
    button.addEventListener('click', function () {
        let quantityInput = button.closest('tr').querySelector('.quantity-input');
        let quantity = parseInt(quantityInput.value);
        if (quantity < 100) {
            quantityInput.value = quantity + 1;
            updateCart(button.closest('tr').dataset.productId, quantityInput.value);
        }
    });
});

// Decrement button event listener
document.querySelectorAll('.btn-decrement').forEach(function (button) {
    button.addEventListener('click', function () {
        let quantityInput = button.closest('tr').querySelector('.quantity-input');
        let quantity = parseInt(quantityInput.value);
        if (quantity > 1) {
            quantityInput.value = quantity - 1;
            updateCart(button.closest('tr').dataset.productId, quantityInput.value);
        }
    });
});

// Function to update the cart and refresh the total prices
function updateCart(productId, quantity) {
    $.ajax({
        url: '@Url.Action("UpdateCart", "Customer")',
        type: 'POST',
        data: { productId: productId, quantity: quantity },
        success: function (response) {
            // Update the total price for the updated item
            $('#item-total-' + productId).text('Rs ' + response.updatedItemTotal.toFixed(2));

            // Update the cart count and total displayed on the page
            $('#cart-count').text(response.cartCount); // Update the cart count
            $('#cartSubtotal').text(response.cartSubtotal.toFixed(2));
            $('#cartTotal').text('Rs ' + response.cartTotal.toFixed(2));
        },
        error: function () {
            alert("Error updating cart.");
        }
    });
}

function proceedToCheckout() {
    var cartCount = @((Session["Cart"] as List<Cart>)?.Count ?? 0);
    if (cartCount === 0) {
        alert("Your cart is empty. Please add items to your cart before proceeding to checkout.");
    } else {
        window.location.href = '@Url.Action("Checkout", "Customer")';
    }
}

</script>

