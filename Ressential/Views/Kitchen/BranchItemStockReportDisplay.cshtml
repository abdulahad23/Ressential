@model IEnumerable<Ressential.Models.BranchItemStockReportViewModel>

<!DOCTYPE html>
<html>
<head>
    <title>Branch Item Stock Report</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 20px;
            color: #333;
            background-color: #ffffff;
        }

        .report-header {
            position: relative;
            margin-bottom: 30px;
            border-bottom: 2px solid #2c3e50;
            padding-bottom: 15px;
        }

        .header-content {
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            padding-left: 100px; /* Make space for the logo */
        }

        .logo-container {
            position: absolute;
            left: 0;
            display: flex;
            align-items: center;
        }

        .logo-container img {
            max-height: 100px;
            object-fit: contain;
        }

        .header-text {
            text-align: center;
        }

        .header-text h1 {
            margin: 0;
            font-size: 28px;
            color: #2c3e50;
            font-weight: 600;
        }

        .header-text p {
            margin: 5px 0;
            font-size: 15px;
            color: #555;
        }

        .report-info-container {
            position: absolute;
            top: 0;
            right: 0;
        }

        .report-info {
            background-color: #f5f7fa;
            padding: 10px 15px;
            border-radius: 6px;
            border-left: 4px solid #3498db;
            text-align: left;
        }

        .report-info p {
            margin: 5px 0;
            font-size: 14px;
        }

        .report-info span {
            font-weight: bold;
            color: #2c3e50;
        }

        .report-details {
            margin-bottom: 20px;
            font-size: 14px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            font-size: 14px;
        }

        .table th, .table td {
            border: 1px solid #e0e0e0;
            padding: 12px;
            text-align: left;
        }

        .table th {
            background-color: #2c3e50;
            color: white;
            font-weight: 500;
        }

        .table tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table tfoot td {
            font-weight: bold;
            background-color: #eaecef;
            color: #2c3e50;
        }

        .no-data {
            text-align: center;
            font-style: italic;
            color: #888;
            padding: 20px;
        }

        .timestamp {
            font-size: 13px;
            color: #6c757d;
            margin-top: 5px;
        }
        
        .action-buttons {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
            gap: 10px;
        }

        .btn {
            padding: 8px 15px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            font-size: 14px;
            cursor: pointer;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-export {
            background-color: #27ae60;
            color: white;
        }

        .btn-export:hover {
            background-color: #219653;
        }

        .btn-pdf {
            background-color: #e74c3c;
            color: white;
        }

        .btn-pdf:hover {
            background-color: #c0392b;
        }
        
        .stock-status {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-low {
            background-color: #e74c3c;
            color: white;
        }
        
        .status-medium {
            background-color: #f39c12;
            color: white;
        }
        
        .status-good {
            background-color: #2ecc71;
            color: white;
        }
        
        .text-right {
            text-align: right;
        }
        
        .table-container {
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="report-header">
            <div class="header-content">
                <div class="logo-container">
                    <img src="~/Content/assets/images/logo/ressential-logo.png" alt="Ressential Logo" />
                </div>
                <div class="header-text">
                    <h1>Branch Item Stock Report</h1>
                    <p>Category: @ViewBag.CategoryName</p>
                    <p>Branch: @ViewBag.BranchName</p>
                    <p class="timestamp">Generated On: @ViewBag.GeneratedTimestamp</p>
                </div>
            </div>
            
            <div class="report-info-container">
                <div class="report-info">
                    <p><span>Category:</span> @ViewBag.CategoryName</p>
                    <p><span>Branch:</span> @ViewBag.BranchName</p>
                    <p><span>Status:</span> @ViewBag.Status</p>
                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <p><span>Search Term:</span> @ViewBag.SearchTerm</p>
                    }
                    <p><span>Sort By:</span> @(ViewBag.SortBy == "name" ? "Item Name" : 
                                           ViewBag.SortBy == "code" ? "Item Code" : 
                                           ViewBag.SortBy == "category" ? "Category" :
                                           ViewBag.SortBy == "stock" ? "Stock (High to Low)" : 
                                           ViewBag.SortBy == "price" ? "Price (High to Low)" : "Item Name")</p>
                </div>
            </div>
        </div>

        <div class="action-buttons">
            @{
                var isPdfExport = ViewBag.IsPdfExport == true;
            }
            @if (!isPdfExport)
            {
                <button class="btn btn-export" onclick="exportToExcel()">Export to Excel</button>
                <button class="btn btn-pdf" onclick="exportToPDF()">Export to PDF</button>
            }
        </div>

        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>S.No</th>
                        <th>Item Code</th>
                        <th>Item Name</th>
                        <th>Category</th>
                        <th>Unit</th>
                        <th>Current Stock</th>
                        <th>Reorder Level</th>
                        <th>Cost Per Unit</th>
                        <th>Stock Value</th>
                        <th>Stock Status</th>
                        <th>Item Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int serialNo = 1;
                        decimal totalStockValue = 0;
                        
                        foreach (var item in Model)
                        {
                            decimal stockValue = item.Stock * item.Price;
                            totalStockValue += stockValue;
                            
                            string stockStatus = "";
                            string statusClass = "";
                            
                            if (item.Stock <= 0)
                            {
                                stockStatus = "Out of Stock";
                                statusClass = "status-low";
                            }
                            else if (item.Stock < item.MinStock)
                            {
                                stockStatus = "Low Stock";
                                statusClass = "status-medium";
                            }
                            else
                            {
                                stockStatus = "Good";
                                statusClass = "status-good";
                            }
                            
                            <tr>
                                <td>@serialNo</td>
                                <td>@item.ItemCode</td>
                                <td>@item.ItemName</td>
                                <td>@item.CategoryName</td>
                                <td>@item.Unit</td>
                                <td class="text-right">@item.Stock.ToString("N2")</td>
                                <td class="text-right">@item.MinStock.ToString("N2")</td>
                                <td class="text-right">@item.Price.ToString("N2")</td>
                                <td class="text-right">@stockValue.ToString("N2")</td>
                                <td><span class="stock-status @statusClass">@stockStatus</span></td>
                                <td><span class="stock-status @(item.IsActive ? "status-good" : "status-low")">@(item.IsActive ? "Active" : "Inactive")</span></td>
                            </tr>
                            serialNo++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="12" class="no-data">No data available</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @if (Model != null && Model.Any())
                    {
                        decimal totalStockValue = Model.Sum(i => i.Stock * i.Price);
                        int totalBranches = Model.Select(i => i.BranchId).Distinct().Count();
                        
                        <tr>
                            <td colspan="9" style="text-align: right;"><strong>Total Stock Value</strong></td>
                            <td colspan="2" class="text-right">@totalStockValue.ToString("N2")</td>
                        </tr>
                        <tr>
                            <td colspan="9" style="text-align: right;"><strong>Total Items</strong></td>
                            <td colspan="2">@Model.Count()</td>
                        </tr>
                    }
                </tfoot>
            </table>
        </div>
    </div>

    <script>
        function exportToExcel() {
            var categoryId = '@ViewBag.CategoryId';
            var status = '@ViewBag.Status';
            var searchTerm = '@ViewBag.SearchTerm';
            var sortBy = '@ViewBag.SortBy';
            
            var url = '@Url.Action("ExportBranchItemStockReportToExcel", "Kitchen")' +
                '?categoryId=' + encodeURIComponent(categoryId) +
                '&status=' + encodeURIComponent(status) +
                '&searchTerm=' + encodeURIComponent(searchTerm) +
                '&sortBy=' + encodeURIComponent(sortBy);
                
            window.location.href = url;
        }

        function exportToPDF() {
            var categoryId = '@ViewBag.CategoryId';
            var status = '@ViewBag.Status';
            var searchTerm = '@ViewBag.SearchTerm';
            var sortBy = '@ViewBag.SortBy';
            
            var url = '@Url.Action("ExportBranchItemStockReportToPDF", "Kitchen")' +
                '?categoryId=' + encodeURIComponent(categoryId) +
                '&status=' + encodeURIComponent(status) +
                '&searchTerm=' + encodeURIComponent(searchTerm) +
                '&sortBy=' + encodeURIComponent(sortBy);
                
            window.location.href = url;
        }
    </script>
</body>
</html> 