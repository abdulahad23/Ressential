@model Ressential.Models.Order

@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Views/Shared/_KitchenLayout.cshtml";
}

@using (Html.BeginForm("CreateOrder", "Kitchen", FormMethod.Post))
{
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle pe-3" aria-hidden="true"></i>
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            <i class="fa fa-check pe-3" aria-hidden="true"></i>
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    <h2 class="text-secondary"><b>Create Order </b></h2>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.OrderDate, DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control", @placeholder = "Order Date", @type = "date", @readonly = "readonly" })
                                <label for="floatingInput">Order Date</label>
                                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="PaymentMethod" name="PaymentMethod">
                                    <option selected value="Cash">Cash</option>
                                    <option value="Card">Card</option>
                                </select>
                                <label for="floatingInput">Payment Method</label>
                                @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="OrderType" name="OrderType">
                                    <option selected value="DineIn">Dine-In</option>
                                    <option value="TakeAway">Take-Away</option>
                                </select>
                                <label for="floatingInput">Order Type</label>
                                @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.TableNo, "", new { @class = "form-control", @placeholder = "Table No" })
                                <label for="floatingInput">Table No</label>
                                @Html.ValidationMessageFor(model => model.TableNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <h2 class="text-secondary pt-3"><b>Products</b></h2>
                        <div class="row">
                            <div class="container">
                                <div class="table-responsive tab-content">
                                    <table id="itemsTable" class="table table-hover">
                                        <tbody id="itemsTableBody">
                                            <tr class="item-row">
                                                <td class="tbl-min-width-7 col-5 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <select class="form-control product-select" name="OrderDetails[0].ProductId" required>
                                                            <option value="" disabled selected>Select Product</option>
                                                            @foreach (var product in ViewBag.Products)
                                                            {
                                                                <option value="@product.ProductId" data-price="@product.ProductPrice">@product.ProductName</option>
                                                            }
                                                        </select>
                                                        <label>Item</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control quantity" name="OrderDetails[0].ProductQuantity" value="1" required />
                                                        <label>Quantity</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control price" name="OrderDetails[0].ProductPrice" readonly />
                                                        <label>Price</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control total"
                                                               placeholder="Total" name="total[]" readonly>
                                                        <label>Total</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-1">
                                                    <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn"
                                                            type="button" data-toggle="tooltip" data-placement="top"
                                                            title="Remove">
                                                        <i class="fa fa-times"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Add Row Button -->
                                <button class="btn btn-light-success btn-sm rounded-0 ms-3 mb-3" id="addRowBtn"
                                        type="button">
                                    <i class="fa fa-plus-square d-flex p-1">
                                        <span class="ps-2 m-0">Add More</span>
                                    </i>
                                </button>
                            </div>
                            <div class="row mt-2">
                                <div class="col-md-3 ms-auto">
                                    <label for="totalAmount" class="form-label"><b>Total Amount:</b></label>
                                    <div class="input-group">
                                        <span class="input-group-text">Rs</span>
                                        <input type="number" class="form-control" id="totalAmount" placeholder="Total Amount" name="grandTotal" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <button id="btnSignalR" type="submit" class="btn btn-secondary mr-2 ps-4 pe-4 btn-save">
                                                    Save
                                                </button>
                                                <button type="button" id="btnSaveAndPrint" class="btn btn-success mr-2 ps-4 pe-4">
                                                    <i class="fa fa-save"></i> Save & Print
                                                </button>
                                                <a class="btn btn-light ms-1 ps-4 pe-4" href="@Url.Action("OrderList","Kitchen")">Cancel</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Hidden Receipt Template for Printing -->
<div id="receipt-template" style="display: none;">
    <div id="receipt" style="width: 70mm; font-family: 'Arial', sans-serif; margin: 0 auto; padding: 10px 20px 30px 20px;">
        <div style="text-align: center; margin-bottom: 10px;">
            <img src="~/Content/assets/images/logo/ressential-logo-small.png" alt="Ressential Logo" style="max-width: 60%; height: auto; filter: contrast(150%) brightness(100%);" />
            <h2 style="margin: 10px 0; font-size: 18px; font-weight: bold; letter-spacing: 1px;">RESSENTIAL</h2>
        </div>
        <div style="text-align: center; margin-bottom: 10px;">
            <p style="margin: 0; font-size: 14px;"><span id="receipt-branch-name"></span></p>
            <p style="margin: 0; font-size: 12px;"><span id="receipt-branch-address"></span></p>
            <p style="margin: 0; font-size: 12px;">Contact: <span id="receipt-branch-phone"></span></p>
        </div>
        <div style="border-top: 1px dashed black; border-bottom: 1px dashed black; padding: 8px 0; margin-bottom: 10px;">
            <table style="width: 100%; font-size: 12px;">
                <tr>
                    <td style="width: 50%;">Order #: <span id="receipt-order-no" style="font-weight: bold;"></span></td>
                    <td style="width: 50%; text-align: right;">Date: <span id="receipt-date"></span></td>
                </tr>
                <tr>
                    <td>Type: <span id="receipt-order-type"></span></td>
                    <td style="text-align: right;">Time: <span id="receipt-time"></span></td>
                </tr>
                <tr>
                    <td>Staff: <span id="receipt-staff-name"></span></td>
                    <td style="text-align: right;" id="receipt-table-container">Table #: <span id="receipt-table-no"></span></td>
                </tr>
            </table>
        </div>
        <div style="margin-bottom: 10px;">
            <table style="width: 100%; border-collapse: collapse; font-size: 12px;">
                <thead>
                    <tr style="border-bottom: 1px dashed black;">
                        <th style="text-align: left; padding-bottom: 5px; font-weight: bold;">Item</th>
                        <th style="text-align: center; padding-bottom: 5px; font-weight: bold;">Qty</th>
                        <th style="text-align: right; padding-bottom: 5px; font-weight: bold;">Price</th>
                        <th style="text-align: right; padding-bottom: 5px; font-weight: bold;">Total</th>
                    </tr>
                </thead>
                <tbody id="receipt-items">
                    <!-- Items will be added dynamically -->
                </tbody>
            </table>
        </div>
        <div style="border-top: 1px dashed black; padding-top: 8px; margin-bottom: 10px;">
            <table style="width: 100%; font-size: 12px;">
                <tr>
                    <td style="width: 60%; text-align: right;">Subtotal:</td>
                    <td style="width: 40%; text-align: right;"><span id="receipt-subtotal"></span></td>
                </tr>
                <tr>
                    <td style="text-align: right; font-weight: bold;">Grand Total:</td>
                    <td style="text-align: right; font-weight: bold;"><span id="receipt-grand-total"></span></td>
                </tr>
                <tr>
                    <td style="text-align: right;">Payment Method:</td>
                    <td style="text-align: right;"><span id="receipt-payment-method"></span></td>
                </tr>
            </table>
        </div>
        <div style="text-align: center; margin-top: 45px; margin-bottom: 30px; font-size: 12px;">
            <img src="~/Content/assets/images/qr-code.png" alt="Ressential Logo" style="max-width: 30%; margin: 0px 0px 10px 0px;" />
            <p style="margin: 0;">Thank you for your order!</p>
            <p style="margin: 5px 0;">Please visit us again</p>
            <p style="margin: 25px 0;">.</p>
        </div>
    </div>
</div>

<script>
    let rowIndex = 1;

    document.getElementById('addRowBtn').addEventListener('click', function () {
        const tableBody = document.getElementById('itemsTableBody');
        const newRow = document.createElement('tr');
        newRow.classList.add('item-row');
        newRow.innerHTML = `
            <td class="tbl-min-width-7 col-5 mb-3 mt-3">
                <div class="form-floating">
                    <select class="form-control product-select" name="OrderDetails[${rowIndex}].ProductId" required>
                        <option value="" disabled selected>Select Product</option>
                        @foreach (var product in ViewBag.Products)
                        {
                            <option value="@product.ProductId" data-price="@product.ProductPrice">
                                @product.ProductName
                            </option>
                        }
                    </select>
                    <label>Item</label>
                </div>
            </td>
            <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control quantity" name="OrderDetails[${rowIndex}].ProductQuantity" value="1" required/>
                    <label>Quantity</label>
                </div>
            </td>
            <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control price" name="OrderDetails[${rowIndex}].ProductPrice" readonly/>
                    <label>Price</label>
                </div>
            </td>
            <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control total" placeholder="Total" name="total[]" readonly>
                    <label>Total</label>
                </div>
            </td>
            <td class="tbl-min-width-1">
                <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn" type="button" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </td>
        `;
        tableBody.appendChild(newRow);
        rowIndex++;
    });

    $(document).ready(function () {
        // Error container
        const errorContainer = $('<div class="text-danger" id="productErrors"></div>');
        $('.text-secondary.pt-3').after(errorContainer);

        function displayError(message) {
            $('#productErrors').html(message);
        }

        function clearError() {
            $('#productErrors').html('');
        }

        function validateProducts() {
            let isValid = true;
            let errorMessage = '';
            const rows = $('#itemsTableBody .item-row');

            if (rows.length === 0) {
                errorMessage = 'At least one product must be added.';
                isValid = false;
            }

            rows.each(function () {
                const quantityInput = $(this).find('.quantity');
                const productSelect = $(this).find('.product-select');

                // Check for valid quantity
                const quantity = parseFloat(quantityInput.val());
                if (!Number.isInteger(quantity) || quantity <= 0) {
                    quantityInput.addClass('is-invalid');
                    isValid = false;
                    errorMessage = 'Quantity must be a whole number greater than 0.';
                } else {
                    quantityInput.removeClass('is-invalid');
                }

                // Check for selected product
                if (productSelect.val() === null || productSelect.val() === '') {
                    productSelect.addClass('is-invalid');
                    isValid = false;
                    errorMessage = 'All rows must have a product selected.';
                } else {
                    productSelect.removeClass('is-invalid');
                }
            });

            if (!isValid) {
                displayError(errorMessage);
            } else {
                clearError();
            }

            return isValid;
        }

        // Validate before form submission
        $('form').on('submit', function (e) {
            if (!validateProducts()) {
                e.preventDefault();
            }
        });

        // Validate when quantity changes
        $(document).on('input', '.quantity', function () {
            validateProducts();
        });

        // Validate when product changes
        $(document).on('change', '.product-select', function () {
            validateProducts();
        });

        // Remove row validation
        $(document).on('click', '.removeRowBtn', function () {
            const rows = $('#itemsTableBody .item-row');
            if (rows.length > 1) {
                $(this).closest('.item-row').remove();
                renumberRows();
                updateGrandTotal();
                validateProducts();
            } else {
                alert("At least one item is required.");
            }
        });

        // Functions for price and grand total remain unchanged
        $(document).on('change', '.product-select', function () {
            const selectedOption = $(this).find(':selected');
            const price = selectedOption.data('price');
            const row = $(this).closest('.item-row');
            row.find('.price').val(price);
            row.find('.quantity').val(1); // Default to 1 if product is selected
            updateLineTotal(row);
        });

        $(document).on('input', '.quantity', function () {
            const row = $(this).closest('.item-row');
            updateLineTotal(row);
        });

        function updateLineTotal(row) {
            const quantity = parseFloat(row.find('.quantity').val()) || 0;
            const price = parseFloat(row.find('.price').val()) || 0;
            const total = quantity * price;
            row.find('.total').val(total.toFixed(2));
            updateGrandTotal();
        }

        function updateGrandTotal() {
            let grandTotal = 0;
            $('.total').each(function () {
                grandTotal += parseFloat($(this).val()) || 0;
            });
            $('#totalAmount').val(grandTotal.toFixed(2));
        }

        function renumberRows() {
            $('#itemsTableBody .item-row').each(function (index) {
                $(this).find('.product-select').attr('name', `OrderDetails[${index}].ProductId`);
                $(this).find('.quantity').attr('name', `OrderDetails[${index}].ProductQuantity`);
                $(this).find('.price').attr('name', `OrderDetails[${index}].ProductPrice`);
                $(this).find('.total').attr('name', `OrderDetails[${index}].ProductTotal`);
            });
        }

        // Receipt functions
        function generateReceiptData() {
            const orderType = $('#OrderType').val();
            const tableNo = $('#TableNo').val();
            const paymentMethod = $('#PaymentMethod').val();
            const grandTotal = parseFloat($('#totalAmount').val()) || 0;
            const branchName = '';
            const branchAddress = '';
            const branchPhone = '';
            const staffName = '@User.Identity.Name';
            const items = [];
            $('#itemsTableBody .item-row').each(function() {
                const productName = $(this).find('.product-select option:selected').text();
                const quantity = parseFloat($(this).find('.quantity').val()) || 0;
                const price = parseFloat($(this).find('.price').val()) || 0;
                const total = parseFloat($(this).find('.total').val()) || 0;
                if (productName && quantity > 0) {
                    items.push({
                        name: productName,
                        quantity: quantity,
                        price: price,
                        total: total
                    });
                }
            });
            return {
                orderNo: '',
                orderDate: '',
                orderType: orderType,
                tableNo: tableNo,
                paymentMethod: paymentMethod,
                items: items,
                grandTotal: grandTotal,
                branchInfo: {
                    name: branchName,
                    address: branchAddress,
                    phone: branchPhone
                },
                staffName: staffName
            };
        }

        function fillReceiptTemplate(receiptData) {
            $('#receipt-branch-name').text(receiptData.branchInfo.name || '');
            $('#receipt-branch-address').text(receiptData.branchInfo.address || '');
            $('#receipt-branch-phone').text(receiptData.branchInfo.phone || '');
            $('#receipt-order-no').text(receiptData.orderNo || '');
            $('#receipt-date').text(receiptData.orderDate || '');
            $('#receipt-time').text(new Date().toLocaleTimeString());
            $('#receipt-order-type').text(receiptData.orderType);
            $('#receipt-table-container').show();
            $('#receipt-table-no').text(receiptData.tableNo);
            $('#receipt-staff-name').text(receiptData.staffName || '');
            
            const itemsContainer = $('#receipt-items');
            itemsContainer.empty();
            let subtotal = 0;
            receiptData.items.forEach(item => {
                subtotal += item.total;
                itemsContainer.append(`
                    <tr style="padding: 4px 0;">
                        <td style="text-align: left; padding: 3px 0;">${item.name}</td>
                        <td style="text-align: center; padding: 3px 0;">${item.quantity}</td>
                        <td style="text-align: right; padding: 3px 0;">Rs ${item.price.toFixed(2)}</td>
                        <td style="text-align: right; padding: 3px 0;">Rs ${item.total.toFixed(2)}</td>
                    </tr>
                `);
            });
            $('#receipt-subtotal').text('Rs ' + subtotal.toFixed(2));
            $('#receipt-grand-total').text('Rs ' + receiptData.grandTotal.toFixed(2));
            $('#receipt-payment-method').text(receiptData.paymentMethod);
            $('#receipt-datetime').text('Printed: ' + new Date().toLocaleString());
        }

        function printReceipt(receiptData) {
            fillReceiptTemplate(receiptData);
            const printWindow = window.open('', '_blank', 'width=800,height=600');
            printWindow.document.write(`
                <html>
                <head>
                    <title>Print Receipt</title>
                    <style>
                        @@media print {
                            body {
                                margin: 0;
                                padding: 0;
                                width: 80mm;
                                -webkit-print-color-adjust: exact !important;
                                print-color-adjust: exact !important;
                            }
                            @@page {
                                size: 80mm auto;
                                margin: 0;
                            }
                            * {
                                font-family: 'Arial', sans-serif !important;
                                color: black !important;
                                -webkit-print-color-adjust: exact !important;
                                print-color-adjust: exact !important;
                            }
                            table {
                                width: 100%;
                                border-collapse: collapse;
                            }
                            td, th {
                                padding: 2px 0;
                            }
                            img {
                                -webkit-filter: contrast(150%) brightness(100%);
                                filter: contrast(150%) brightness(100%);
                            }
                            .bold {
                                font-weight: bold !important;
                            }
                        }
                    </style>
                </head>
                <body>
                    ${document.getElementById('receipt').outerHTML}
                </body>
                </html>
            `);
            printWindow.document.close();
            printWindow.onload = function() {
                printWindow.focus();
                setTimeout(function() {
                    printWindow.print();
                    setTimeout(function() {
                        printWindow.close();
                    }, 1000);
                }, 500);
            };
        }

        $('#btnSaveAndPrint').click(function(e) {
            e.preventDefault();
            if (validateProducts()) {
                var form = $('form');
                var formData = form.serialize();
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            const receiptData = generateReceiptData();
                            // Overwrite with server data
                            Object.assign(receiptData, {
                                orderNo: response.orderNo,
                                orderDate: response.orderDate,
                                branchInfo: {
                                    name: response.branchName,
                                    address: response.branchAddress,
                                    phone: response.branchPhone || ''
                                }
                            });
                            printReceipt(receiptData);
                            // Reload the form after printing
                            setTimeout(function() {
                                window.location.reload();
                            }, 1500); // Wait for 1.5 seconds to ensure printing is complete
                        } else {
                            alert(response.message || "Order creation failed.");
                        }
                    },
                    error: function() {
                        alert("An error occurred while saving the order.");
                    }
                });
            } else {
                alert("Please complete the order form before saving and printing.");
            }
        });

        // Add form submission handler for the Save button
        $('form').on('submit', function(e) {
            e.preventDefault();
            if (validateProducts()) {
                var form = $(this);
                var formData = form.serialize();
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            // Reload the form after successful submission
                            window.location.reload();
                        } else {
                            alert(response.message || "Order creation failed.");
                        }
                    },
                    error: function() {
                        alert("An error occurred while saving the order.");
                    }
                });
            }
        });
    });
</script>

