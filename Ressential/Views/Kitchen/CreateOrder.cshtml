@model Ressential.Models.Order

@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Views/Shared/_KitchenLayout.cshtml";
}

@using (Html.BeginForm("CreateOrder", "Kitchen", FormMethod.Post))
{
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle pe-3" aria-hidden="true"></i>
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            <i class="fa fa-check pe-3" aria-hidden="true"></i>
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    <h2 class="text-secondary"><b>Create Order </b></h2>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.OrderDate, DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control", @placeholder = "Order Date", @type = "date" })
                                <label for="floatingInput">Order Date</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="PaymentMethod" name="PaymentMethod">
                                    <option selected value="Cash">Cash</option>
                                    <option value="Online">Debit or Credit Card</option>
                                </select>
                                <label for="floatingInput">Payment Method</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="OrderType" name="OrderType">
                                    <option selected value="Dine-In">Dine-In</option>
                                    <option value="Take-Away">Take-Away</option>
                                </select>
                                <label for="floatingInput">Order Type</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.TableNo, "", new { @class = "form-control", @placeholder = "Table No" })
                                <label for="floatingInput">Table No</label>
                            </div>
                        </div>
                        <h2 class="text-secondary pt-3"><b>Products</b></h2>
                        <div class="row">
                            <div class="container">
                                <div class="table-responsive tab-content">
                                    <table id="itemsTable" class="table table-hover">
                                        <tbody id="itemsTableBody">
                                            @foreach (var item in Model.OrderDetails)
                                            {
                                                <tr class="item-row">
                                                    <td class="tbl-min-width-7 col-5 mb-3 mt-3">
                                                        <div class="form-floating">
                                                            <select class="form-control">
                                                                <option value="0">Select Item</option>
                                                                @foreach (var i in ViewBag.Products)
                                                                {

                                                                    if (i.ProductId == item.ProductId)
                                                                    {
                                                                        <option selected value="@i.ProductId">@i.ProductName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@i.ProductId">@i.ProductName</option>
                                                                    }
                                                                }
                                                            </select>
                                                            <label>Item</label>
                                                        </div>
                                                    </td>
                                                    <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                        <div class="form-floating">
                                                            @Html.TextBoxFor(m => item.ProductQuantity, new { @class = "form-control productQuantity", @placeholder = "Quantity", @name = "productQuantity[]" })
                                                            <label>Quantity</label>
                                                        </div>
                                                    </td>
                                                    <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                        <div class="form-floating">
                                                            @Html.TextBoxFor(m => item.ProductPrice, new { @class = "form-control productPrice", @placeholder = "Price", @name = "productPrice[]", @readonly = "readonly" })
                                                            <label>Price</label>
                                                        </div>
                                                    </td>
                                                    <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                                                        <div class="form-floating">
                                                            <input type="number" class="form-control total"
                                                                   placeholder="Total" name="total[]" readonly>
                                                            <label>Total</label>
                                                        </div>
                                                    </td>
                                                    <td class="tbl-min-width-1">
                                                        <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn"
                                                                type="button" data-toggle="tooltip" data-placement="top"
                                                                title="Remove">
                                                            <i class="fa fa-times"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Add Row Button -->
                                <button class="btn btn-light-success btn-sm rounded-0 ms-3 mb-3" id="addRowBtn"
                                        type="button">
                                    <i class="fa fa-plus-square d-flex p-1">
                                        <span class="ps-2 m-0">Add More</span>
                                    </i>
                                </button>
                            </div>
                            <div class="row mt-2">
                                <div class="col-md-3 ms-auto">
                                    <label for="totalAmount" class="form-label"><b>Total Amount:</b></label>
                                    <div class="input-group">
                                        <span class="input-group-text">Rs</span>
                                        <input type="number" class="form-control" id="totalAmount" placeholder="Total Amount" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class=" row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="col-sm-9">
                                                <button type="submit"
                                                        class="btn btn-secondary mr-2 ps-4 pe-4 btn-save">
                                                    Save
                                                </button>
                                                <button class="btn btn-light ms-1 ps-4 pe-4">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>

}

<script>
    $(document).ready(function () {
            // Add row when clicking "Add More"
            $('#addRowBtn').click(function () {
                let newRow = $('#itemsTableBody .item-row').last().clone();
                newRow.find("input").val(""); // Clear input values
                newRow.find("select").val("0"); // Clear dropdowns

                // Increment row index for the new row to avoid conflicts
                let index = $('#itemsTableBody .item-row').length;

                // Update name attributes to match the model binding format
                newRow.find('select[name^="OrderDetails"]').attr("name", `OrderDetails[${index}].ProductId`);
                newRow.find('input[name^="OrderDetails"][name*=".ProductQuantity"]').attr("name", `OrderDetails[${index}].ProductQuantity`);
                newRow.find('input[name^="OrderDetails"][name*=".ProductPrice"]').attr("name", `OrderDetails[${index}].ProductPrice`);

                $('#itemsTableBody').append(newRow); // Append the new row to the table body
            });

            // Remove row when clicking the remove button
            $(document).on('click', '.removeRowBtn', function () {
                if ($('#itemsTableBody .item-row').length > 1) {
                    $(this).tooltip('dispose');
                    $(this).closest('.item-row').remove();
                } else {
                    alert("At least one item is required.");
                }
            });
        });

    $('#CreateOrder').on('click', function () {

        debugger;

        // Initialize an object to hold all data
         let order = {
            OrderDetails: [],
            orderDate: $('#OrderDate').val(),
            paymentMethod: $('#PaymentMethod').val(),
            orderType: $('#OrderType').val(),
            tableNo: $('#TableNo').val(),
            memo: $('#Memo').val()
        };

        // Find all rows in the tbody
        $('#itemsTableBody .item-row').each(function() {
            // Initialize an object to hold the values for each row
            let rowData = {};

            // Get the selected item from the dropdown
            rowData.ProductId = $(this).find('select').val();

            // Get the quantity
            rowData.ProductQuantity = $(this).find('input[name="item.ProductQuantity"]').val();

            // Get the unit price
            rowData.ProductPrice = $(this).find('input[name="item.ProductPrice"]').val();

            // Get the total
            rowData.total = $(this).find('input[name="total[]"]').val();

            // Add the row data to the purchaseData.items array
            order.OrderDetails.push(rowData);
        });

        // Now you can use purchaseData for your purposes
         console.log(order);

        // Example: you might want to send this data to a server
         $.ajax({
             url: '@Url.Action("CreateOrder", "Kitchen")',
             method: 'POST',
             data: JSON.stringify(order),
             contentType: 'application/json',
             success: function (response) {
                if (response == "0") {
                    window.location.href = '@Url.Action("OrderList","Kitchen")'
                }
                else if (response == "1")
                {
                    window.location.href = '@Url.Action("Index","Error")'
                }
             }
         });
     });
</script>

