@model Ressential.Models.Order

@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Views/Shared/_KitchenLayout.cshtml";
}

@using (Html.BeginForm("CreateOrder", "Kitchen", FormMethod.Post))
{
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle pe-3" aria-hidden="true"></i>
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            <i class="fa fa-check pe-3" aria-hidden="true"></i>
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    <h2 class="text-secondary"><b>Create Order </b></h2>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.OrderDate, DateTime.Today.ToString("yyyy-MM-dd"), new { @class = "form-control", @placeholder = "Order Date", @type = "date" })
                                <label for="floatingInput">Order Date</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="PaymentMethod" name="PaymentMethod">
                                    <option selected value="Cash">Cash</option>
                                    <option value="Online">Debit or Credit Card</option>
                                </select>
                                <label for="floatingInput">Payment Method</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                <select class="form-control" id="OrderType" name="OrderType">
                                    <option selected value="Dine-In">Dine-In</option>
                                    <option value="Take-Away">Take-Away</option>
                                </select>
                                <label for="floatingInput">Order Type</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3 mt-3">
                                @Html.TextBoxFor(model => model.TableNo, "", new { @class = "form-control", @placeholder = "Table No" })
                                <label for="floatingInput">Table No</label>
                            </div>
                        </div>
                        <h2 class="text-secondary pt-3"><b>Products</b></h2>
                        <div class="row">
                            <div class="container">
                                <div class="table-responsive tab-content">
                                    <table id="itemsTable" class="table table-hover">
                                        <tbody id="itemsTableBody">
                                            <tr class="item-row">
                                                <td class="tbl-min-width-7 col-5 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <select class="form-control product-select" name="OrderDetails[0].ProductId">
                                                            <option value="" disabled selected>Select Product</option>
                                                            @foreach (var product in ViewBag.Products)
                                                            {
                                                                <option value="@product.ProductId" data-price="@product.ProductPrice">@product.ProductName</option>
                                                            }
                                                        </select>
                                                        <label>Item</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control quantity" name="OrderDetails[0].ProductQuantity" value="1" />
                                                        <label>Quantity</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control price" name="OrderDetails[0].ProductPrice" readonly />
                                                        <label>Price</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                                                    <div class="form-floating">
                                                        <input type="number" class="form-control total"
                                                               placeholder="Total" name="total[]" readonly>
                                                        <label>Total</label>
                                                    </div>
                                                </td>
                                                <td class="tbl-min-width-1">
                                                    <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn"
                                                            type="button" data-toggle="tooltip" data-placement="top"
                                                            title="Remove">
                                                        <i class="fa fa-times"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Add Row Button -->
                                <button class="btn btn-light-success btn-sm rounded-0 ms-3 mb-3" id="addRowBtn"
                                        type="button">
                                    <i class="fa fa-plus-square d-flex p-1">
                                        <span class="ps-2 m-0">Add More</span>
                                    </i>
                                </button>
                            </div>
                            <div class="row mt-2">
                                <div class="col-md-3 ms-auto">
                                    <label for="totalAmount" class="form-label"><b>Total Amount:</b></label>
                                    <div class="input-group">
                                        <span class="input-group-text">Rs</span>
                                        <input type="number" class="form-control" id="totalAmount" placeholder="Total Amount" name="grandTotal" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class=" row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="col-sm-9">
                                                <button type="submit"
                                                        class="btn btn-secondary mr-2 ps-4 pe-4 btn-save">
                                                    Save
                                                </button>
                                                <button class="btn btn-light ms-1 ps-4 pe-4">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
    </div>

}

<script>
    let rowIndex = 1;

    document.getElementById('addRowBtn').addEventListener('click', function () {
        const tableBody = document.getElementById('itemsTableBody');
        const newRow = document.createElement('tr');
        newRow.classList.add('item-row');
        newRow.innerHTML = `
            <td class="tbl-min-width-7 col-5 mb-3 mt-3">
                <div class="form-floating">
                    <select class="form-control product-select" name="OrderDetails[${rowIndex}].ProductId">
                        <option value="" disabled selected>Select Product</option>
                        @foreach (var product in ViewBag.Products)
                        {
                            <option value="@product.ProductId" data-price="@product.ProductPrice">
                                @product.ProductName
                            </option>
                        }
                    </select>
                    <label>Item</label>
                </div>
            </td>
            <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control quantity" name="OrderDetails[${rowIndex}].ProductQuantity" value="1" />
                    <label>Quantity</label>
                </div>
            </td>
            <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control price" name="OrderDetails[${rowIndex}].ProductPrice" readonly />
                    <label>Price</label>
                </div>
            </td>
            <td class="tbl-min-width-5 col-2 mb-3 mt-3">
                <div class="form-floating">
                    <input type="number" class="form-control total" placeholder="Total" name="total[]" readonly>
                    <label>Total</label>
                </div>
            </td>
            <td class="tbl-min-width-1">
                <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn" type="button" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </td>
        `;
        tableBody.appendChild(newRow);
        rowIndex++;
    });

    $(document).ready(function () {
        

        // Update price when product changes
        $(document).on('change', '.product-select', function () {
            const selectedOption = $(this).find(':selected');
            const price = selectedOption.data('price');
            const row = $(this).closest('.item-row');
            row.find('.price').val(price);
            row.find('.quantity').val(1); // Default to 1 if product is selected
            updateLineTotal(row);
        });

        // Update line total when quantity changes
        $(document).on('input', '.quantity', function () {
            const row = $(this).closest('.item-row');
            updateLineTotal(row);
        });

        // Function to update line total
        function updateLineTotal(row) {
            const quantity = parseFloat(row.find('.quantity').val()) || 0;
            const price = parseFloat(row.find('.price').val()) || 0;
            const total = quantity * price;
            row.find('.total').val(total.toFixed(2));
            updateGrandTotal();
        }

        // Remove row and update grand total
        $(document).on('click', '.removeRowBtn', function () {
            if ($('#itemsTableBody .item-row').length > 1) {
                $(this).closest('.item-row').remove();
                renumberRows();
                updateGrandTotal();
            } else {
                alert("At least one item is required.");
            }
        });

        // Function to calculate and update grand total
        function updateGrandTotal() {
            let grandTotal = 0;
            $('.total').each(function () {
                grandTotal += parseFloat($(this).val()) || 0;
            });
            $('#totalAmount').val(grandTotal.toFixed(2));
        }
    });
    function renumberRows() {
        $('#itemsTableBody .item-row').each(function (index) {
            $(this).find('.product-select').attr('name', `OrderDetails[${index}].ProductId`);
            $(this).find('.quantity').attr('name', `OrderDetails[${index}].ProductQuantity`);
            $(this).find('.price').attr('name', `OrderDetails[${index}].ProductPrice`);
            $(this).find('.total').attr('name', `OrderDetails[${index}].ProductTotal`);
        });
    }
</script>


