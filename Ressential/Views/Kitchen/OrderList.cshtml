@model IEnumerable<Ressential.Models.Order>
@using Ressential.Utilities

@{
    ViewBag.Title = "OrderList";
    Layout = "~/Views/Shared/_KitchenLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }
        <div class="row">
            <div class="col-md-3">
                <div class="input-group input-group-sm mb-3">
                    <select class="form-select" id="actionDropdown" aria-label="Select action">
                        <option selected>Choose Action</option>
                        @if (Html.HasPermission("Order Status Update"))
                        {
                            <option value="cancel">Cancel</option>
                            <option value="confirm">Confirm</option>
                        }

                    </select>
                    <button class="btn btn-secondary" type="button" onclick="applyAction()">Apply</button>
                </div>
            </div>
            <div class="col-md-3 ms-auto">
                <form id="searchForm" action="@Url.Action("OrderList", "Kitchen")" method="get">
                    <div class="input-group input-group-sm mb-3">
                        <input type="text" name="search" class="form-control" id="floatingInput" placeholder="Search" value="@Request.QueryString["search"]">
                        <button class="btn btn-secondary" type="submit"><i class="fas fa-search"></i></button>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <form id="actionForm" action="" method="post">
                <table class="table table-bordered table-hover">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" class="fit-content">
                                <input class="form-check-input" type="checkbox" value="" id="selectAll" onclick="toggleAll(this)">
                            </th>
                            <th scope="col"> Order Date</th>
                            <th scope="col">Order No</th>
                            <th scope="col">Products</th>
                            <th scope="col">Total Amount</th>
                            <th scope="col">Status</th>
                            <th scope="col" class="fit-content">Option</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td><input type="checkbox" class="form-check-input item-checkbox" name="selectedItems" value="@order.OrderId" aria-label="Select Order"></td>
                                <td>@order.OrderDate.ToString("dd-MMM-yyyy")</td>
                                <td>@order.OrderNo</td>
                                @{
                                    string productNames = "";
                                    foreach (var product in order.OrderDetails)
                                    {
                                        if (productNames == "")
                                        {
                                            productNames = product.Product.ProductName;
                                        }
                                        else
                                        {
                                            productNames = productNames + ", " + product.Product.ProductName;
                                        }
                                    }
                                    <td>@productNames</td>
                                }
                                <td>Rs @order.OrderTotal.ToString("N0")</td>
                                <td>
                                    @if (order.Status == "Pending")
                                    {
                                        <span style="background-color: darkorange; color: white; border-radius: 6px; padding: 5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Preparing")
                                    {
                                        <span style="background-color: lightslategrey; color: white; border-radius: 6px; padding: 5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Ready")
                                    {
                                        <span style="background-color: lightseagreen;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Out For Delivery")
                                    {
                                        <span style="background-color: orange;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Completed")
                                    {
                                        <span style="background-color: forestgreen;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Cancelled")
                                    {
                                        <span style="background-color: red;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                    else if (order.Status == "Returned")
                                    {
                                        <span style="background-color: darkred;color:white; border-radius:6px; padding:5px 10px 5px 10px; font-size: 0.8rem !important" class="label">
                                            @order.Status
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false" style="background: none; border: none;">
                                            <i class="bi bi-three-dots-vertical" style="font-size: 1.5rem;"></i>
                                        </button>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            @if (Html.HasPermission("Order View"))
                                            {
                                                <li><button class="dropdown-item" type="button" onclick="viewOrder(@order.OrderId)"><i class="bi bi-eye" style="font-size: 1.25rem;"></i> View Order</button></li>
                                            }
                                            @if (Html.HasPermission("Order Status Update"))
                                            {
                                                <li><button class="dropdown-item" type="button" onclick="submitConfirmOrder(@order.OrderId)"><i class="bi bi-check2-circle" style="font-size: 1.25rem;"></i> Confirm Order</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="submitCompleteOrder(@order.OrderId)"><i class="bi bi-check-circle" style="font-size: 1.25rem;"></i> Mark Completed</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="submitOutForDelivery(@order.OrderId)"><i class="bi bi-truck" style="font-size: 1.25rem;"></i> Out For Delivery</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="submitCancelOrder(@order.OrderId)"><i class="bi bi-x-circle" style="font-size: 1.25rem;"></i> Cancel Order</button></li>
                                                <li><button class="dropdown-item" type="button" onclick="submitOrderReturn(@order.OrderId)"><i class="bi bi-arrow-repeat" style="font-size: 1.25rem;"></i> Sale Return</button></li>
                                            }
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>
            <!-- Hidden Form for Edit/Delete Actions -->
            <form id="optionForm" method="post" style="display: none;">
                <input type="hidden" name="OrderId" id="formOrderId" />
            </form>
        </div>
    </div>
</div>

<script>
    // Function to toggle all checkboxes
    function toggleAll(source) {
        const checkboxes = document.querySelectorAll('.item-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = source.checked);
    }

    function applyAction() {
        const action = document.getElementById("actionDropdown").value;
        const checkboxes = document.querySelectorAll('.item-checkbox:checked');

        if (action === "cancel") {
            if (checkboxes.length === 0) {
                alert("No records selected to cancel order.");
                return;
            }
            if (confirm("Are you sure you want to cancel the selected Orders?")) {
                document.getElementById("actionForm").action = "@Url.Action("CancelSelectedOrders", "Kitchen")";
                document.getElementById("actionForm").submit();
            }
        } else if (action === "confirm") {
            if (checkboxes.length === 0) {
                alert("No records selected to confirm order.");
                return;
            }
            if (confirm("Are you sure you want to confirm the selected Orders?")) {
                document.getElementById("actionForm").action = "@Url.Action("ConfirmSelectedOrders", "Kitchen")";
                document.getElementById("actionForm").submit();
            }
        }
    }

    function submitCancelOrder(OrderId) {
        if (confirm('Are you sure you want to cancel the order?')) {
            $.ajax({
                url: '@Url.Action("CancelOrder", "Kitchen")',
                type: 'POST',
                data: { orderId: OrderId },
                success: function (response) {
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }
    }

    function submitConfirmOrder(OrderId) {
        if (confirm('Are you sure you want to confirm the order?')) {
            $.ajax({
                url: '@Url.Action("ConfirmOrder", "Kitchen")',
                type: 'POST',
                data: { orderId: OrderId },
                success: function (response) {
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }
    }

    function submitCompleteOrder(OrderId) {
        $.ajax({
            url: '@Url.Action("CompleteOrder", "Kitchen")',
            type: 'POST',
            data: { orderId: OrderId },
            success: function (response) {
                location.reload();
            },
            error: function (xhr, status, error) {
                alert('Error: ' + error);
            }
        });
    }

    function submitOutForDelivery(OrderId) {
        $.ajax({
            url: '@Url.Action("OutForDelivery", "Kitchen")',
            type: 'POST',
            data: { orderId: OrderId },
            success: function (response) {
                location.reload();
            },
            error: function (xhr, status, error) {
                alert('Error: ' + error);
            }
        });
    }

    function submitOrderReturn(OrderId) {
        $.ajax({
            url: '@Url.Action("OrderReturn", "Kitchen")',
            type: 'POST',
            data: { orderId: OrderId },
            success: function (response) {
                location.reload();
            },
            error: function (xhr, status, error) {
                alert('Error: ' + error);
            }
        });
    }

    function viewOrder(OrderId) {
        window.location.href = "@Url.Action("OrderDetail", "Kitchen")?orderId=" + OrderId;
    }
</script>


