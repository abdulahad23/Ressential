@model Ressential.Models.Product

@{ ViewBag.Title = "CreateProduct";
    Layout = "~/Views/Shared/_KitchenLayout.cshtml"; }

@using (Html.BeginForm("CreateProduct", "Kitchen", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <h2 class="text-secondary"><b>Create Product </b></h2>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.TextBoxFor(model => model.ProductName, "", new { @class = "form-control", @placeholder = "Product Name" })
                            <label for="floatingInput">Product Name</label>
                        </div>
                    </div>
                    @*<div class="col-md-6">
            <div class="form-floating mb-3 mt-3">
                @Html.TextBoxFor(model => model.ProductImage, "", new { @class = "form-control", @placeholder = "Product Image" })
                <label for="floatingInput">Product Image</label>
            </div>
        </div>*@

                    @*<div class="col-md-6">
            <div class="form-floating mb-3 mt-3">
                <input type="file" name="imageFile" class="form-control" />
                <label for="imageFile">Product Image</label>
            </div>
        </div>*@



                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.TextBoxFor(model => model.ProductPrice, "", new { @class = "form-control", @placeholder = "Product Price" })
                            <label for="floatingInput">Product Price</label>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.TextBoxFor(model => model.ProductCode, "", new { @class = "form-control", @placeholder = "Product Code" })
                            <label for="floatingInput">Product Code</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.DropDownListFor(m => m.ProductCategoryId, new SelectList(ViewBag.ProductCategories, "ProductCategoryId", "ProductCategoryName"), "Select Category", new { @class = "form-control" })
                            <label for="ProductCategoryId">Item</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            <select class="form-control" id="chefId" name="chefId">
                                <option selected value="0">Select Chef</option>
                                <option value="1">Saba</option>
                                <option value="2">Ahad</option>
                                <option value="3">Waniya</option>
                                <option value="4">Haniya</option>
                                <option value="5">Abdul Basit</option>
                            </select>
                            <label for="chefId">Chef Name</label>

                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.DropDownListFor(m => m.Status, new SelectList(new[] {
                            new { Value = true, Text = "Available" },
                            new { Value = false, Text = "Inavailable" }
                        }, "Value", "Text"), new { @class = "form-control" })
                            <label for="floatingInput">Product Status</label>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            <!-- File input for image upload -->
                            <input type="file" name="imageFile" id="imageFile" class="form-control" onchange="previewImage(event)" />
                            <label for="imageFile">Product Image</label>
                        </div>

                        <!-- Image preview section -->
                        <div class="mt-3">
                            <img id="imagePreview"
                                 src="@(!string.IsNullOrEmpty(Model?.ProductImage) ? Url.Content(Model.ProductImage) : Url.Content("~/Content/assets/no_image.png"))"
                                 alt="Product Image"
                                 class="img-thumbnail"
                                 style="width: 400px; height: 400px; object-fit: contain;" />
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3 mt-3">
                            @Html.TextBoxFor(model => model.Description, "", new { @class = "form-control", @placeholder = "Description" })
                            <label for="floatingInput">Description</label>
                        </div>
                    </div>

                    <h2 class="text-secondary pt-3"><b>Items</b></h2>
                    <div class="row">
                        <div class="container">
                            <div class="table-responsive tab-content">
                                <table id="itemsTable" class="table table-hover">
                                    @*<table id="itemsTable" class="table items-table-without-price table-hover">*@
                                    <tbody id="itemsTableBody">

                                        @foreach (var item in Model.ProductItemDetails)
                                        {
                        <tr class="item-row">
                            <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                <div class="form-floating">
                                    <select class="form-control">
                                        <option value="0">Select Item</option>
                                        @foreach (var i in ViewBag.Items)
                                        {

                                            if (i.ItemId == item.ItemId)
                                            {
                    <option selected value="@i.ItemId">@i.Item.ItemName</option>
 }
                else
                {
                <option value="@i.ItemId">@i.Item.ItemName</option>
}
        }
                                    </select>
                                    <label>Item</label>
                                </div>
                            </td>
                            <td class="tbl-min-width-6 col-3 mb-3 mt-3">
                                <div class="form-floating">
                                    @Html.TextBoxFor(m => item.Description, new { @class = "form-control", @placeholder = "Description", })
                                    <label>Description</label>
                                </div>
                            </td>
                            <td class="tbl-min-width-4 col-2 mb-3 mt-3">
                                <div class="form-floating">
                                    @Html.TextBoxFor(m => item.ItemQuantity, new { @class = "form-control quantity", @placeholder = "Quantity", @name = "quantity[]" })
                                    <label>Quantity</label>
                                </div>
                            </td>
                            <td class="tbl-min-width-1">
                                <button class="btn btn-danger btn-sm rounded-2 m-2 removeRowBtn"
                                        type="button" data-toggle="tooltip" data-placement="top"
                                        title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>
                            </td>
                        </tr>
}
                                    </tbody>
                                </table>
                            </div>

                            <!-- Add Row Button -->
                            <button class="btn btn-light-success btn-sm rounded-0 ms-3 mb-3" id="addRowBtn"
                                    type="button">
                                <i class="fa fa-plus-square d-flex p-1">
                                    <span class="ps-2 m-0">Add More</span>
                                </i>
                            </button>
                        </div>
                        <div class="row mt-5">
                            <div class=" row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-sm-9">
                                            <button id="CreateProduct" type="button"
                                                    class="btn btn-secondary mr-2 ps-4 pe-4">
                                                Save
                                            </button>
                                            <a class="btn btn-light ms-1 ps-4 pe-4" href="@Url.Action("ProductList","Kitchen")">Cancel</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>}

<script>
    $(document).ready(function () {
            // Add row when clicking "Add More"
            $('#addRowBtn').click(function () {
                let newRow = $('#itemsTableBody .item-row').last().clone();
                newRow.find("input").val(""); // Clear input values
                newRow.find("select").val("0"); // Clear dropdowns

                // Increment row index for the new row to avoid conflicts
                let index = $('#itemsTableBody .item-row').length;

                // Update name attributes to match the model binding format
                newRow.find('select[name^="ProductItemDetails"]').attr("name", `ProductItemDetails[${index}].ItemId`);
                newRow.find('input[name^="ProductItemDetails"][name*=".Description"]').attr("name", `ProductItemDetails[${index}].Description`);
                newRow.find('input[name^="ProductItemDetails"][name*=".ItemQuantity"]').attr("name", `ProductItemDetails[${index}].ItemQuantity`);

                $('#itemsTableBody').append(newRow); // Append the new row to the table body
            });

            // Remove row when clicking the remove button
        $(document).on('click', '.removeRowBtn', function () {
                if ($('#itemsTableBody .item-row').length > 1) {
                    $(this).closest('.item-row').remove();
                    $(this).tooltip('dispose');
                } else {
                    alert("At least one item is required.");
                }
            });
        });
    function previewImage(event) {
        const imagePreview = document.getElementById('imagePreview');
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }

    $('#CreateProduct').on('click', function () {

    debugger;

    // Create a FormData object to hold the form data
    const formData = new FormData();

    // Add product details to FormData
    formData.append("ProductName", $('#ProductName').val());
    formData.append("ProductCode", $('#ProductCode').val());
    formData.append("ProductPrice", $('#ProductPrice').val());
    formData.append("Status", $('#Status').val());
    formData.append("ProductCategoryId", $('#ProductCategoryId').val());
    formData.append("Description", $('#Description').val());

    // Add the image file to FormData
    const imageFile = $('#imageFile')[0].files[0];
    if (imageFile) {
        formData.append("imageFile", imageFile);
    }

    // Add ProductItemDetails (array) to FormData
    $('#itemsTableBody .item-row').each(function (index) {
        formData.append(`ProductItemDetails[${index}].ItemId`, $(this).find('select').val());
        formData.append(`ProductItemDetails[${index}].Description`, $(this).find('input[name="item.Description"]').val());
        formData.append(`ProductItemDetails[${index}].ItemQuantity`, $(this).find('input[name="item.ItemQuantity"]').val());
    });

    // Perform AJAX request
    $.ajax({
        url: '@Url.Action("CreateProduct", "Kitchen")',
        type: 'POST',
        data: formData,
        contentType: false, // Needed for FormData
        processData: false, // Prevent jQuery from processing data
        success: function (response) {
            if (response == "0") {
                window.location.href = '@Url.Action("ProductList", "Kitchen")';
            } else if (response == "1") {
                window.location.href = '@Url.Action("Index", "Error")';
            }
        },
        error: function (xhr, status, error) {
            console.error("AJAX Error: ", status, error);
        }
    });
});

</script>


